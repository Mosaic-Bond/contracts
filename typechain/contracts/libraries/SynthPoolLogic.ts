/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import type {
  FunctionFragment,
  Result,
  EventFragment,
} from "@ethersproject/abi";
import type { Listener, Provider } from "@ethersproject/providers";
import type {
  TypedEventFilter,
  TypedEvent,
  TypedListener,
  OnEvent,
  PromiseOrValue,
} from "../../common";

export interface SynthPoolLogicInterface extends utils.Interface {
  functions: {
    "totalDebtUSD(address[],IPriceOracle)": FunctionFragment;
    "userDebtUSD(uint256,uint256,uint256)": FunctionFragment;
  };

  getFunction(
    nameOrSignatureOrTopic: "totalDebtUSD" | "userDebtUSD"
  ): FunctionFragment;

  encodeFunctionData(
    functionFragment: "totalDebtUSD",
    values: [PromiseOrValue<string>[], PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "userDebtUSD",
    values: [
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>
    ]
  ): string;

  decodeFunctionResult(
    functionFragment: "totalDebtUSD",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "userDebtUSD",
    data: BytesLike
  ): Result;

  events: {
    "CollateralParamsUpdated(address,uint256,uint256,uint256,uint256,bool)": EventFragment;
    "SynthRemoved(address)": EventFragment;
    "SynthUpdated(address,bool,bool,uint256,uint256)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "CollateralParamsUpdated"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "SynthRemoved"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "SynthUpdated"): EventFragment;
}

export interface CollateralParamsUpdatedEventObject {
  asset: string;
  cap: BigNumber;
  baseLTV: BigNumber;
  liqThreshold: BigNumber;
  liqBonus: BigNumber;
  isEnabled: boolean;
}
export type CollateralParamsUpdatedEvent = TypedEvent<
  [string, BigNumber, BigNumber, BigNumber, BigNumber, boolean],
  CollateralParamsUpdatedEventObject
>;

export type CollateralParamsUpdatedEventFilter =
  TypedEventFilter<CollateralParamsUpdatedEvent>;

export interface SynthRemovedEventObject {
  synth: string;
}
export type SynthRemovedEvent = TypedEvent<[string], SynthRemovedEventObject>;

export type SynthRemovedEventFilter = TypedEventFilter<SynthRemovedEvent>;

export interface SynthUpdatedEventObject {
  synth: string;
  isActive: boolean;
  isDisabled: boolean;
  mintFee: BigNumber;
  burnFee: BigNumber;
}
export type SynthUpdatedEvent = TypedEvent<
  [string, boolean, boolean, BigNumber, BigNumber],
  SynthUpdatedEventObject
>;

export type SynthUpdatedEventFilter = TypedEventFilter<SynthUpdatedEvent>;

export interface SynthPoolLogic extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: SynthPoolLogicInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    totalDebtUSD(
      _synths: PromiseOrValue<string>[],
      _oracle: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<[BigNumber] & { totalDebt: BigNumber }>;

    userDebtUSD(
      totalSupply: PromiseOrValue<BigNumberish>,
      balance: PromiseOrValue<BigNumberish>,
      totalDebt: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;
  };

  totalDebtUSD(
    _synths: PromiseOrValue<string>[],
    _oracle: PromiseOrValue<string>,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  userDebtUSD(
    totalSupply: PromiseOrValue<BigNumberish>,
    balance: PromiseOrValue<BigNumberish>,
    totalDebt: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  callStatic: {
    totalDebtUSD(
      _synths: PromiseOrValue<string>[],
      _oracle: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    userDebtUSD(
      totalSupply: PromiseOrValue<BigNumberish>,
      balance: PromiseOrValue<BigNumberish>,
      totalDebt: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;
  };

  filters: {
    "CollateralParamsUpdated(address,uint256,uint256,uint256,uint256,bool)"(
      asset?: PromiseOrValue<string> | null,
      cap?: null,
      baseLTV?: null,
      liqThreshold?: null,
      liqBonus?: null,
      isEnabled?: null
    ): CollateralParamsUpdatedEventFilter;
    CollateralParamsUpdated(
      asset?: PromiseOrValue<string> | null,
      cap?: null,
      baseLTV?: null,
      liqThreshold?: null,
      liqBonus?: null,
      isEnabled?: null
    ): CollateralParamsUpdatedEventFilter;

    "SynthRemoved(address)"(
      synth?: PromiseOrValue<string> | null
    ): SynthRemovedEventFilter;
    SynthRemoved(
      synth?: PromiseOrValue<string> | null
    ): SynthRemovedEventFilter;

    "SynthUpdated(address,bool,bool,uint256,uint256)"(
      synth?: PromiseOrValue<string> | null,
      isActive?: null,
      isDisabled?: null,
      mintFee?: null,
      burnFee?: null
    ): SynthUpdatedEventFilter;
    SynthUpdated(
      synth?: PromiseOrValue<string> | null,
      isActive?: null,
      isDisabled?: null,
      mintFee?: null,
      burnFee?: null
    ): SynthUpdatedEventFilter;
  };

  estimateGas: {
    totalDebtUSD(
      _synths: PromiseOrValue<string>[],
      _oracle: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    userDebtUSD(
      totalSupply: PromiseOrValue<BigNumberish>,
      balance: PromiseOrValue<BigNumberish>,
      totalDebt: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    totalDebtUSD(
      _synths: PromiseOrValue<string>[],
      _oracle: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    userDebtUSD(
      totalSupply: PromiseOrValue<BigNumberish>,
      balance: PromiseOrValue<BigNumberish>,
      totalDebt: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;
  };
}
