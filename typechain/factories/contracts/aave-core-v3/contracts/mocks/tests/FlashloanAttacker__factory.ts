/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../../common";
import type {
  FlashloanAttacker,
  FlashloanAttackerInterface,
} from "../../../../../../contracts/aave-core-v3/contracts/mocks/tests/FlashloanAttacker";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IPoolAddressesProvider",
        name: "provider",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ADDRESSES_PROVIDER",
    outputs: [
      {
        internalType: "contract IPoolAddressesProvider",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "POOL",
    outputs: [
      {
        internalType: "contract IPool",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "premium",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "executeOperation",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "supplyAsset",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60c060405234801561001057600080fd5b50604051610d5e380380610d5e83398101604081905261002f91610166565b80806001600160a01b03166080816001600160a01b031681525050806001600160a01b031663026b1d5f6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610088573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100ac9190610166565b6001600160a01b031660a0816001600160a01b03168152505050806001600160a01b031663026b1d5f6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610104573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101289190610166565b600180546001600160a01b0319166001600160a01b03929092169190911790555061018a565b6001600160a01b038116811461016357600080fd5b50565b60006020828403121561017857600080fd5b81516101838161014e565b9392505050565b60805160a051610baa6101b46000396000818160df01526104060152600060560152610baa6000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80630542975c146100515780631416d762146100a25780631b11d0ff146100b75780637535d246146100da575b600080fd5b6100787f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b6100b56100b036600461069c565b610101565b005b6100ca6100c5366004610770565b6102f0565b6040519015158152602001610099565b6100787f000000000000000000000000000000000000000000000000000000000000000081565b6040517fa0712d6800000000000000000000000000000000000000000000000000000000815260048101829052829073ffffffffffffffffffffffffffffffffffffffff82169063a0712d68906024016020604051808303816000875af1158015610170573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610194919061085c565b506001546040517f095ea7b300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff91821660048201527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60248201529082169063095ea7b3906044016020604051808303816000875af115801561022d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610251919061085c565b506001546040517f617ba03700000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff858116600483015260248201859052306044830152600060648301529091169063617ba03790608401600060405180830381600087803b1580156102d357600080fd5b505af11580156102e7573d6000803e3d6000fd5b50505050505050565b600085816102fe8787610491565b60408051600080825260208201909252919250610337918a91610331565b606081526020019060019003908161031c5790505b506104a7565b6040517fa0712d680000000000000000000000000000000000000000000000000000000081526004810187905273ffffffffffffffffffffffffffffffffffffffff83169063a0712d68906024016020604051808303816000875af11580156103a4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103c8919061085c565b506040517f095ea7b300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000811660048301526024820183905289169063095ea7b3906044016020604051808303816000875af115801561045e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610482919061085c565b50600198975050505050505050565b808201828110156104a157600080fd5b92915050565b6001546040517f35ea6a7500000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff848116600483015260009216906335ea6a75906024016101e060405180830381865afa158015610519573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061053d919061091e565b6101008101516040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff918216600482015291925084916000918316906370a0823190602401602060405180830381865afa1580156105b7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105db9190610a41565b6001546040517f3fa01eab00000000000000000000000000000000000000000000000000000000815291925073ffffffffffffffffffffffffffffffffffffffff1690633fa01eab9061063e908890859060029060009030908c90600401610a5a565b600060405180830381600087803b15801561065857600080fd5b505af115801561066c573d6000803e3d6000fd5b505050505050505050565b73ffffffffffffffffffffffffffffffffffffffff8116811461069957600080fd5b50565b600080604083850312156106af57600080fd5b82356106ba81610677565b946020939093013593505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040516101e0810167ffffffffffffffff8111828210171561071b5761071b6106c8565b60405290565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715610768576107686106c8565b604052919050565b600080600080600060a0868803121561078857600080fd5b853561079381610677565b945060208681013594506040870135935060608701356107b281610677565b9250608087013567ffffffffffffffff808211156107cf57600080fd5b818901915089601f8301126107e357600080fd5b8135818111156107f5576107f56106c8565b610825847fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f84011601610721565b91508082528a8482850101111561083b57600080fd5b80848401858401376000848284010152508093505050509295509295909350565b60006020828403121561086e57600080fd5b8151801515811461087e57600080fd5b9392505050565b60006020828403121561089757600080fd5b6040516020810181811067ffffffffffffffff821117156108ba576108ba6106c8565b6040529151825250919050565b80516fffffffffffffffffffffffffffffffff811681146108e757600080fd5b919050565b805164ffffffffff811681146108e757600080fd5b805161ffff811681146108e757600080fd5b80516108e781610677565b60006101e0828403121561093157600080fd5b6109396106f7565b6109438484610885565b8152610951602084016108c7565b6020820152610962604084016108c7565b6040820152610973606084016108c7565b6060820152610984608084016108c7565b608082015261099560a084016108c7565b60a08201526109a660c084016108ec565b60c08201526109b760e08401610901565b60e08201526101006109ca818501610913565b908201526101206109dc848201610913565b908201526101406109ee848201610913565b90820152610160610a00848201610913565b90820152610180610a128482016108c7565b908201526101a0610a248482016108c7565b908201526101c0610a368482016108c7565b908201529392505050565b600060208284031215610a5357600080fd5b5051919050565b600060c0820173ffffffffffffffffffffffffffffffffffffffff808a1684526020898186015288604086015261ffff88166060860152818716608086015260c060a0860152829150855180845260e08601925060e08160051b87010193508187016000805b83811015610b61577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff2089880301865282518051808952835b81811015610b13578281018801518a82018901528701610af8565b81811115610b23578488838c0101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01697909701850196509484019491840191600101610ac0565b50949d9c5050505050505050505050505056fea2646970667358221220c577902d99fe4258abc0fc523ed897a579c9bee5016c15a9a7a20de51cd9e96b64736f6c634300080a0033";

type FlashloanAttackerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FlashloanAttackerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FlashloanAttacker__factory extends ContractFactory {
  constructor(...args: FlashloanAttackerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    provider: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<FlashloanAttacker> {
    return super.deploy(
      provider,
      overrides || {}
    ) as Promise<FlashloanAttacker>;
  }
  override getDeployTransaction(
    provider: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(provider, overrides || {});
  }
  override attach(address: string): FlashloanAttacker {
    return super.attach(address) as FlashloanAttacker;
  }
  override connect(signer: Signer): FlashloanAttacker__factory {
    return super.connect(signer) as FlashloanAttacker__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FlashloanAttackerInterface {
    return new utils.Interface(_abi) as FlashloanAttackerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): FlashloanAttacker {
    return new Contract(address, _abi, signerOrProvider) as FlashloanAttacker;
  }
}
