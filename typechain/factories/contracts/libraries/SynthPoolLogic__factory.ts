/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  SynthPoolLogic,
  SynthPoolLogicInterface,
} from "../../../contracts/libraries/SynthPoolLogic";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "cap",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "baseLTV",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "liqThreshold",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "liqBonus",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "isEnabled",
        type: "bool",
      },
    ],
    name: "CollateralParamsUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "synth",
        type: "address",
      },
    ],
    name: "SynthRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "synth",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "isActive",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "isDisabled",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "mintFee",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "burnFee",
        type: "uint256",
      },
    ],
    name: "SynthUpdated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_synths",
        type: "address[]",
      },
      {
        internalType: "contract IPriceOracle",
        name: "_oracle",
        type: "IPriceOracle",
      },
    ],
    name: "totalDebtUSD",
    outputs: [
      {
        internalType: "uint256",
        name: "totalDebt",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "totalSupply",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalDebt",
        type: "uint256",
      },
    ],
    name: "userDebtUSD",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "";

type SynthPoolLogicConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SynthPoolLogicConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SynthPoolLogic__factory extends ContractFactory {
  constructor(...args: SynthPoolLogicConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<SynthPoolLogic> {
    return super.deploy(overrides || {}) as Promise<SynthPoolLogic>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): SynthPoolLogic {
    return super.attach(address) as SynthPoolLogic;
  }
  override connect(signer: Signer): SynthPoolLogic__factory {
    return super.connect(signer) as SynthPoolLogic__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SynthPoolLogicInterface {
    return new utils.Interface(_abi) as SynthPoolLogicInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SynthPoolLogic {
    return new Contract(address, _abi, signerOrProvider) as SynthPoolLogic;
  }
}
