/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  RouterErrors,
  RouterErrorsInterface,
} from "../../../../../contracts/router/libraries/Errors.sol/RouterErrors";

const _abi = [
  {
    inputs: [],
    name: "ADDRESS_CANNOT_SEND_VALUE",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "AMOUNT_LIMIT_FAIL",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ARRAY_LENGTH_MISMATCH",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ASSETS_MISMATCH",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ETH_TRANSFER",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "GIVEN_IN_ONLY_ALLOWED",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "INCORRECT_ETH_VALUE",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "INSUFFICIENT_ERC20_BALANCE",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "INSUFFICIENT_ETH",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "INVALID_SWAPS_INPUT",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "KIND_NOT_VALID",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MIN_AMOUNT_NOT_RECIEVED",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "NOT_AUTHORIZED",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "POOL_NOT_SUPPORTED",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6104db61003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100f45760003560e01c806388adebd211610096578063c5f22f1e11610070578063c5f22f1e14610367578063c68533c3146103a3578063cf7fdb72146103df578063d097726a1461041b57600080fd5b806388adebd2146102b357806397bd4abb146102ef578063a210680a1461032b57600080fd5b80633d83866f116100d25780633d83866f146101c3578063629d0b2c146101ff5780636a3f3b271461023b5780636e7343dc1461027757600080fd5b80630725bf5b146100f95780630cfa71e61461014b578063196192f014610187575b600080fd5b6101356040518060400160405280600181526020017f340000000000000000000000000000000000000000000000000000000000000081525081565b6040516101429190610457565b60405180910390f35b6101356040518060400160405280600181526020017f360000000000000000000000000000000000000000000000000000000000000081525081565b6101356040518060400160405280600181526020017f350000000000000000000000000000000000000000000000000000000000000081525081565b6101356040518060400160405280600281526020017f313100000000000000000000000000000000000000000000000000000000000081525081565b6101356040518060400160405280600181526020017f310000000000000000000000000000000000000000000000000000000000000081525081565b6101356040518060400160405280600181526020017f330000000000000000000000000000000000000000000000000000000000000081525081565b6101356040518060400160405280600181526020017f320000000000000000000000000000000000000000000000000000000000000081525081565b6101356040518060400160405280600181526020017f370000000000000000000000000000000000000000000000000000000000000081525081565b6101356040518060400160405280600181526020017f380000000000000000000000000000000000000000000000000000000000000081525081565b6101356040518060400160405280600281526020017f313200000000000000000000000000000000000000000000000000000000000081525081565b6101356040518060400160405280600281526020017f313300000000000000000000000000000000000000000000000000000000000081525081565b6101356040518060400160405280600281526020017f313400000000000000000000000000000000000000000000000000000000000081525081565b6101356040518060400160405280600181526020017f390000000000000000000000000000000000000000000000000000000000000081525081565b6101356040518060400160405280600281526020017f313000000000000000000000000000000000000000000000000000000000000081525081565b600060208083528351808285015260005b8181101561048457858101830151858201604001528201610468565b506000604082860101526040601f19601f830116850101925050509291505056fea2646970667358221220096b054cfacbd120e039308f3980565a78d67db0acdb0967acc7f6e0f4c34b1064736f6c63430008130033";

type RouterErrorsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RouterErrorsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RouterErrors__factory extends ContractFactory {
  constructor(...args: RouterErrorsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<RouterErrors> {
    return super.deploy(overrides || {}) as Promise<RouterErrors>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): RouterErrors {
    return super.attach(address) as RouterErrors;
  }
  override connect(signer: Signer): RouterErrors__factory {
    return super.connect(signer) as RouterErrors__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RouterErrorsInterface {
    return new utils.Interface(_abi) as RouterErrorsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RouterErrors {
    return new Contract(address, _abi, signerOrProvider) as RouterErrors;
  }
}
