/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BytesLike,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  ClaimRewards,
  ClaimRewardsInterface,
} from "../../../../contracts/router/rewards/ClaimRewards";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_merkleRoot",
        type: "bytes32",
      },
      {
        internalType: "contract IERC20",
        name: "_rewardToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_epoch",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_startAt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_endAt",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "epoch",
        type: "uint256",
      },
    ],
    name: "Claimed",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "bytes32[]",
        name: "_merkleProof",
        type: "bytes32[]",
      },
    ],
    name: "claimReward",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "endAt",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "epoch",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "hasClaimed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "merkleRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "startAt",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "bytes32[]",
        name: "_merkleProof",
        type: "bytes32[]",
      },
    ],
    name: "verifyAddress",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610a61380380610a6183398101604081905261002f91610069565b6001600081905594909455600280546001600160a01b0319166001600160a01b0394909416939093179092556004556005556006556100bf565b600080600080600060a0868803121561008157600080fd5b855160208701519095506001600160a01b03811681146100a057600080fd5b6040870151606088015160809098015196999198509695945092505050565b610993806100ce6000396000f3fe608060405234801561001057600080fd5b50600436106100a35760003560e01c8063900cf0cf11610076578063aa5c3ab41161005b578063aa5c3ab414610131578063c744656514610139578063f7c618c11461014257600080fd5b8063900cf0cf14610113578063938f25181461011c57600080fd5b8063202d4500146100a85780632eb4a7ab146100d057806373b2e80e146100e75780637cc3ae8c1461010a575b600080fd5b6100bb6100b63660046107b1565b61016d565b60405190151581526020015b60405180910390f35b6100d960015481565b6040519081526020016100c7565b6100bb6100f536600461080b565b60036020526000908152604090205460ff1681565b6100d960065481565b6100d960045481565b61012f61012a366004610826565b6101fd565b005b6100d9610345565b6100d960055481565b600254610155906001600160a01b031681565b6040516001600160a01b0390911681526020016100c7565b6040516bffffffffffffffffffffffff19606086901b1660208201526034810184905260009081906054016040516020818303038152906040528051906020012090506101f18484808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152505060015491508490506103d0565b9150505b949350505050565b6102056103e6565b3360009081526003602052604090205460ff161561026a5760405162461bcd60e51b815260206004820152601660248201527f52657761726420616c726561647920636c61696d65640000000000000000000060448201526064015b60405180910390fd5b6102763384848461016d565b6102c25760405162461bcd60e51b815260206004820152600d60248201527f496e76616c69642070726f6f66000000000000000000000000000000000000006044820152606401610261565b6002546102d9906001600160a01b0316338561043f565b33600081815260036020908152604091829020805460ff191660011790556004548251938452908301869052908201527f987d620f307ff6b94d58743cb7a7509f24071586a77759b77c2d4e29f75a2f9a9060600160405180910390a16103406001600055565b505050565b6002546040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa1580156103a7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103cb9190610872565b905090565b6000826103dd85846104bf565b14949350505050565b6002600054036104385760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610261565b6002600055565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa9059cbb0000000000000000000000000000000000000000000000000000000017905261034090849061050c565b600081815b8451811015610504576104f0828683815181106104e3576104e361088b565b60200260200101516105f4565b9150806104fc816108a1565b9150506104c4565b509392505050565b6000610561826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166106269092919063ffffffff16565b905080516000148061058257508080602001905181019061058291906108c8565b6103405760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152608401610261565b600081831061061057600082815260208490526040902061061f565b60008381526020839052604090205b9392505050565b60606101f5848460008585600080866001600160a01b0316858760405161064d919061090e565b60006040518083038185875af1925050503d806000811461068a576040519150601f19603f3d011682016040523d82523d6000602084013e61068f565b606091505b50915091506106a0878383876106ab565b979650505050505050565b6060831561071a578251600003610713576001600160a01b0385163b6107135760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610261565b50816101f5565b6101f5838381511561072f5781518083602001fd5b8060405162461bcd60e51b8152600401610261919061092a565b80356001600160a01b038116811461076057600080fd5b919050565b60008083601f84011261077757600080fd5b50813567ffffffffffffffff81111561078f57600080fd5b6020830191508360208260051b85010111156107aa57600080fd5b9250929050565b600080600080606085870312156107c757600080fd5b6107d085610749565b935060208501359250604085013567ffffffffffffffff8111156107f357600080fd5b6107ff87828801610765565b95989497509550505050565b60006020828403121561081d57600080fd5b61061f82610749565b60008060006040848603121561083b57600080fd5b83359250602084013567ffffffffffffffff81111561085957600080fd5b61086586828701610765565b9497909650939450505050565b60006020828403121561088457600080fd5b5051919050565b634e487b7160e01b600052603260045260246000fd5b6000600182016108c157634e487b7160e01b600052601160045260246000fd5b5060010190565b6000602082840312156108da57600080fd5b8151801515811461061f57600080fd5b60005b838110156109055781810151838201526020016108ed565b50506000910152565b600082516109208184602087016108ea565b9190910192915050565b60208152600082518060208401526109498160408501602087016108ea565b601f01601f1916919091016040019291505056fea2646970667358221220351f754ef3bb038de4e2c6b4f1c9f992a89239f69aaeb0ac44c1bce1d85bdeb264736f6c63430008130033";

type ClaimRewardsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ClaimRewardsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ClaimRewards__factory extends ContractFactory {
  constructor(...args: ClaimRewardsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _merkleRoot: PromiseOrValue<BytesLike>,
    _rewardToken: PromiseOrValue<string>,
    _epoch: PromiseOrValue<BigNumberish>,
    _startAt: PromiseOrValue<BigNumberish>,
    _endAt: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ClaimRewards> {
    return super.deploy(
      _merkleRoot,
      _rewardToken,
      _epoch,
      _startAt,
      _endAt,
      overrides || {}
    ) as Promise<ClaimRewards>;
  }
  override getDeployTransaction(
    _merkleRoot: PromiseOrValue<BytesLike>,
    _rewardToken: PromiseOrValue<string>,
    _epoch: PromiseOrValue<BigNumberish>,
    _startAt: PromiseOrValue<BigNumberish>,
    _endAt: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _merkleRoot,
      _rewardToken,
      _epoch,
      _startAt,
      _endAt,
      overrides || {}
    );
  }
  override attach(address: string): ClaimRewards {
    return super.attach(address) as ClaimRewards;
  }
  override connect(signer: Signer): ClaimRewards__factory {
    return super.connect(signer) as ClaimRewards__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ClaimRewardsInterface {
    return new utils.Interface(_abi) as ClaimRewardsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ClaimRewards {
    return new Contract(address, _abi, signerOrProvider) as ClaimRewards;
  }
}
