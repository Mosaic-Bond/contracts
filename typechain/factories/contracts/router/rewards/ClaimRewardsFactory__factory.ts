/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  ClaimRewardsFactory,
  ClaimRewardsFactoryInterface,
} from "../../../../contracts/router/rewards/ClaimRewardsFactory";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "_rewardToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_firstEpochStartAt",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "rewardsContract",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "merkleRoot",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "epoch",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "rewardTokenAmount",
        type: "uint256",
      },
    ],
    name: "ClaimRewardsDeployed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_merkleRoot",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "rewardTokenAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_startAt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_endAt",
        type: "uint256",
      },
    ],
    name: "createClaimRewards",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "currentEpoch",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastEpochEndAt",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161163738038061163783398101604081905261002f916100b9565b61003833610069565b600180556000600355600455600280546001600160a01b0319166001600160a01b03929092169190911790556100f3565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600080604083850312156100cc57600080fd5b82516001600160a01b03811681146100e357600080fd5b6020939093015192949293505050565b611535806101026000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c806389be39df1161005b57806389be39df146100b15780638da5cb5b146100dc578063f2fde38b146100ed578063f7c618c11461010057600080fd5b806350ed7a2414610082578063715018a61461009e57806376671808146100a8575b600080fd5b61008b60045481565b6040519081526020015b60405180910390f35b6100a6610113565b005b61008b60035481565b6100c46100bf36600461093f565b610127565b6040516001600160a01b039091168152602001610095565b6000546001600160a01b03166100c4565b6100a66100fb366004610971565b6103de565b6002546100c4906001600160a01b031681565b61011b61046e565b61012560006104c8565b565b6000610131610530565b61013961046e565b8142116101b35760405162461bcd60e51b815260206004820152602860248201527f43757272656e742074696d657374616d70206d7573742062652061667465722060448201527f656e642074696d6500000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b82600454146102295760405162461bcd60e51b8152602060048201526024808201527f73746172744174206d75737420657175616c20746f206c61737445706f63684560448201527f6e6441740000000000000000000000000000000000000000000000000000000060648201526084016101aa565b600060035460405160200161024091815260200190565b60405160208183030381529060405280519060200120905060006040518060200161026a90610932565b601f1982820381018352601f909101166040818152600254600354602084018c90526001600160a01b039091168284015260608301526080820188905260a08083018890528151808403909101815260c083019091526102cd929160e0016109be565b604051602081830303815290604052905060006102ec60008484610589565b90506001600160a01b0381166103445760405162461bcd60e51b815260206004820152601960248201527f4661696c656420746f206465706c6f7920636f6e74726163740000000000000060448201526064016101aa565b60025461035c906001600160a01b031633838a610694565b6004859055600354604080518a8152602081019290925281018890526001600160a01b038216907fcfdae1db7857c1fa5cb15a0dad50fbc095b1d87a3f460fcd89e283be58e55be19060600160405180910390a26001600360008282546103c391906109ed565b909155509093505050506103d660018055565b949350505050565b6103e661046e565b6001600160a01b0381166104625760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084016101aa565b61046b816104c8565b50565b6000546001600160a01b031633146101255760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016101aa565b600080546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6002600154036105825760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016101aa565b6002600155565b6000834710156105db5760405162461bcd60e51b815260206004820152601d60248201527f437265617465323a20696e73756666696369656e742062616c616e636500000060448201526064016101aa565b815160000361062c5760405162461bcd60e51b815260206004820181905260248201527f437265617465323a2062797465636f6465206c656e677468206973207a65726f60448201526064016101aa565b8282516020840186f590506001600160a01b03811661068d5760405162461bcd60e51b815260206004820152601960248201527f437265617465323a204661696c6564206f6e206465706c6f790000000000000060448201526064016101aa565b9392505050565b604080516001600160a01b0385811660248301528416604482015260648082018490528251808303909101815260849091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f23b872dd0000000000000000000000000000000000000000000000000000000017905261071c908590610722565b50505050565b6000610777826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031661080f9092919063ffffffff16565b90508051600014806107985750808060200190518101906107989190610a2d565b61080a5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f7420737563636565640000000000000000000000000000000000000000000060648201526084016101aa565b505050565b60606103d6848460008585600080866001600160a01b031685876040516108369190610a4f565b60006040518083038185875af1925050503d8060008114610873576040519150601f19603f3d011682016040523d82523d6000602084013e610878565b606091505b509150915061088987838387610894565b979650505050505050565b606083156109035782516000036108fc576001600160a01b0385163b6108fc5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016101aa565b50816103d6565b6103d683838151156109185781518083602001fd5b8060405162461bcd60e51b81526004016101aa9190610a6b565b610a6180610a9f83390190565b6000806000806080858703121561095557600080fd5b5050823594602084013594506040840135936060013592509050565b60006020828403121561098357600080fd5b81356001600160a01b038116811461068d57600080fd5b60005b838110156109b557818101518382015260200161099d565b50506000910152565b600083516109d081846020880161099a565b8351908301906109e481836020880161099a565b01949350505050565b80820180821115610a27577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b92915050565b600060208284031215610a3f57600080fd5b8151801515811461068d57600080fd5b60008251610a6181846020870161099a565b9190910192915050565b6020815260008251806020840152610a8a81604085016020870161099a565b601f01601f1916919091016040019291505056fe608060405234801561001057600080fd5b50604051610a61380380610a6183398101604081905261002f91610069565b6001600081905594909455600280546001600160a01b0319166001600160a01b0394909416939093179092556004556005556006556100bf565b600080600080600060a0868803121561008157600080fd5b855160208701519095506001600160a01b03811681146100a057600080fd5b6040870151606088015160809098015196999198509695945092505050565b610993806100ce6000396000f3fe608060405234801561001057600080fd5b50600436106100a35760003560e01c8063900cf0cf11610076578063aa5c3ab41161005b578063aa5c3ab414610131578063c744656514610139578063f7c618c11461014257600080fd5b8063900cf0cf14610113578063938f25181461011c57600080fd5b8063202d4500146100a85780632eb4a7ab146100d057806373b2e80e146100e75780637cc3ae8c1461010a575b600080fd5b6100bb6100b63660046107b1565b61016d565b60405190151581526020015b60405180910390f35b6100d960015481565b6040519081526020016100c7565b6100bb6100f536600461080b565b60036020526000908152604090205460ff1681565b6100d960065481565b6100d960045481565b61012f61012a366004610826565b6101fd565b005b6100d9610345565b6100d960055481565b600254610155906001600160a01b031681565b6040516001600160a01b0390911681526020016100c7565b6040516bffffffffffffffffffffffff19606086901b1660208201526034810184905260009081906054016040516020818303038152906040528051906020012090506101f18484808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152505060015491508490506103d0565b9150505b949350505050565b6102056103e6565b3360009081526003602052604090205460ff161561026a5760405162461bcd60e51b815260206004820152601660248201527f52657761726420616c726561647920636c61696d65640000000000000000000060448201526064015b60405180910390fd5b6102763384848461016d565b6102c25760405162461bcd60e51b815260206004820152600d60248201527f496e76616c69642070726f6f66000000000000000000000000000000000000006044820152606401610261565b6002546102d9906001600160a01b0316338561043f565b33600081815260036020908152604091829020805460ff191660011790556004548251938452908301869052908201527f987d620f307ff6b94d58743cb7a7509f24071586a77759b77c2d4e29f75a2f9a9060600160405180910390a16103406001600055565b505050565b6002546040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa1580156103a7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103cb9190610872565b905090565b6000826103dd85846104bf565b14949350505050565b6002600054036104385760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610261565b6002600055565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa9059cbb0000000000000000000000000000000000000000000000000000000017905261034090849061050c565b600081815b8451811015610504576104f0828683815181106104e3576104e361088b565b60200260200101516105f4565b9150806104fc816108a1565b9150506104c4565b509392505050565b6000610561826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166106269092919063ffffffff16565b905080516000148061058257508080602001905181019061058291906108c8565b6103405760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152608401610261565b600081831061061057600082815260208490526040902061061f565b60008381526020839052604090205b9392505050565b60606101f5848460008585600080866001600160a01b0316858760405161064d919061090e565b60006040518083038185875af1925050503d806000811461068a576040519150601f19603f3d011682016040523d82523d6000602084013e61068f565b606091505b50915091506106a0878383876106ab565b979650505050505050565b6060831561071a578251600003610713576001600160a01b0385163b6107135760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610261565b50816101f5565b6101f5838381511561072f5781518083602001fd5b8060405162461bcd60e51b8152600401610261919061092a565b80356001600160a01b038116811461076057600080fd5b919050565b60008083601f84011261077757600080fd5b50813567ffffffffffffffff81111561078f57600080fd5b6020830191508360208260051b85010111156107aa57600080fd5b9250929050565b600080600080606085870312156107c757600080fd5b6107d085610749565b935060208501359250604085013567ffffffffffffffff8111156107f357600080fd5b6107ff87828801610765565b95989497509550505050565b60006020828403121561081d57600080fd5b61061f82610749565b60008060006040848603121561083b57600080fd5b83359250602084013567ffffffffffffffff81111561085957600080fd5b61086586828701610765565b9497909650939450505050565b60006020828403121561088457600080fd5b5051919050565b634e487b7160e01b600052603260045260246000fd5b6000600182016108c157634e487b7160e01b600052601160045260246000fd5b5060010190565b6000602082840312156108da57600080fd5b8151801515811461061f57600080fd5b60005b838110156109055781810151838201526020016108ed565b50506000910152565b600082516109208184602087016108ea565b9190910192915050565b60208152600082518060208401526109498160408501602087016108ea565b601f01601f1916919091016040019291505056fea2646970667358221220351f754ef3bb038de4e2c6b4f1c9f992a89239f69aaeb0ac44c1bce1d85bdeb264736f6c63430008130033a2646970667358221220606e67396cdf73c74d161385da17d83505aa3d28b6e422fdcc0447d8069999a264736f6c63430008130033";

type ClaimRewardsFactoryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ClaimRewardsFactoryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ClaimRewardsFactory__factory extends ContractFactory {
  constructor(...args: ClaimRewardsFactoryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _rewardToken: PromiseOrValue<string>,
    _firstEpochStartAt: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ClaimRewardsFactory> {
    return super.deploy(
      _rewardToken,
      _firstEpochStartAt,
      overrides || {}
    ) as Promise<ClaimRewardsFactory>;
  }
  override getDeployTransaction(
    _rewardToken: PromiseOrValue<string>,
    _firstEpochStartAt: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _rewardToken,
      _firstEpochStartAt,
      overrides || {}
    );
  }
  override attach(address: string): ClaimRewardsFactory {
    return super.attach(address) as ClaimRewardsFactory;
  }
  override connect(signer: Signer): ClaimRewardsFactory__factory {
    return super.connect(signer) as ClaimRewardsFactory__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ClaimRewardsFactoryInterface {
    return new utils.Interface(_abi) as ClaimRewardsFactoryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ClaimRewardsFactory {
    return new Contract(address, _abi, signerOrProvider) as ClaimRewardsFactory;
  }
}
