/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type { Router, RouterInterface } from "../../../contracts/router/Router";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_synthex",
        type: "address",
      },
      {
        internalType: "address",
        name: "_vault",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "synthPools",
        type: "address[]",
      },
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "enum Router.PoolType",
        name: "poolType",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "address",
        name: "poolId",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "tokenOut",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "RouterSwap",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "synthPool",
        type: "address",
      },
    ],
    name: "isSupportedSynthPool",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes[]",
        name: "data",
        type: "bytes[]",
      },
    ],
    name: "multicall",
    outputs: [
      {
        internalType: "bytes[]",
        name: "results",
        type: "bytes[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "synthPool",
        type: "address",
      },
    ],
    name: "supportSynthPool",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "enum IVault.SwapKind",
            name: "kind",
            type: "uint8",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "bytes32",
                    name: "poolId",
                    type: "bytes32",
                  },
                  {
                    internalType: "uint256",
                    name: "assetInIndex",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "assetOutIndex",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "amount",
                    type: "uint256",
                  },
                  {
                    internalType: "bytes",
                    name: "userData",
                    type: "bytes",
                  },
                ],
                internalType: "struct IVault.BatchSwapStep[]",
                name: "swap",
                type: "tuple[]",
              },
              {
                internalType: "int256[]",
                name: "limits",
                type: "int256[]",
              },
              {
                internalType: "contract IAsset[]",
                name: "assets",
                type: "address[]",
              },
              {
                internalType: "bool",
                name: "isBalancerPool",
                type: "bool",
              },
            ],
            internalType: "struct Router.Swap[]",
            name: "swaps",
            type: "tuple[]",
          },
          {
            internalType: "address payable",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
        ],
        internalType: "struct Router.SwapData",
        name: "swapData",
        type: "tuple",
      },
      {
        internalType: "bytes[]",
        name: "pythUpdateData",
        type: "bytes[]",
      },
    ],
    name: "swap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a06040523480156200001157600080fd5b506040516200282438038062002824833981016040819052620000349162000182565b60016000556200004433620000d9565b600380546001600160a01b03199081166001600160a01b0386811691821790935560048054909216179055841660805260005b8251811015620000c357620000ae8382815181106200009a576200009a6200028f565b60200260200101516200012b60201b60201c565b80620000ba81620002a5565b91505062000077565b50620000cf81620000d9565b50505050620002cd565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b03166000908152600260205260409020805460ff19166001179055565b80516001600160a01b03811681146200016757600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b600080600080608085870312156200019957600080fd5b620001a4856200014f565b93506020620001b58187016200014f565b60408701519094506001600160401b0380821115620001d357600080fd5b818801915088601f830112620001e857600080fd5b815181811115620001fd57620001fd6200016c565b8060051b604051601f19603f830116810181811085821117156200022557620002256200016c565b60405291825284820192508381018501918b8311156200024457600080fd5b938501935b828510156200026d576200025d856200014f565b8452938501939285019262000249565b80975050505050505062000284606086016200014f565b905092959194509250565b634e487b7160e01b600052603260045260246000fd5b600060018201620002c657634e487b7160e01b600052601160045260246000fd5b5060010190565b60805161253b620002e9600039600061047b015261253b6000f3fe60806040526004361061007b5760003560e01c80638da5cb5b1161004e5780638da5cb5b14610126578063ac9650d81461014e578063c9814a671461017b578063f2fde38b1461019b57600080fd5b80633444167414610080578063355c69d6146100a2578063467388ab146100f0578063715018a614610111575b600080fd5b34801561008c57600080fd5b506100a061009b36600461188a565b6101bb565b005b3480156100ae57600080fd5b506100db6100bd3660046118ec565b6001600160a01b031660009081526002602052604090205460ff1690565b60405190151581526020015b60405180910390f35b6101036100fe366004611ba8565b610260565b6040519081526020016100e7565b34801561011d57600080fd5b506100a061033c565b34801561013257600080fd5b506001546040516001600160a01b0390911681526020016100e7565b34801561015a57600080fd5b5061016e610169366004611f09565b610350565b6040516100e79190612023565b34801561018757600080fd5b506100a06101963660046118ec565b610445565b3480156101a757600080fd5b506100a06101b63660046118ec565b61056e565b6040517fd505accf000000000000000000000000000000000000000000000000000000008152336004820152306024820152604481018790526064810186905260ff8416608482015260a4810183905260c481018290526001600160a01b0385169063d505accf9060e401600060405180830381600087803b15801561024057600080fd5b505af1158015610254573d6000803e3d6000fd5b50505050505050505050565b600061026a6105fb565b60008351600181111561027f5761027f612036565b146040518060400160405280600181526020017f3100000000000000000000000000000000000000000000000000000000000000815250906102dd5760405162461bcd60e51b81526004016102d4919061204c565b60405180910390fd5b50600083602001515111604051806040016040528060018152602001601b60f91b8152509061031f5760405162461bcd60e51b81526004016102d4919061204c565b5061032a8383610654565b90506103366001600055565b92915050565b610344610af8565b61034e6000610b52565b565b60608167ffffffffffffffff81111561036b5761036b611909565b60405190808252806020026020018201604052801561039e57816020015b60608152602001906001900390816103895790505b50905060005b8281101561043e5761040e308585848181106103c2576103c261205f565b90506020028101906103d49190612075565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250610bbc92505050565b8282815181106104205761042061205f565b60200260200101819052508080610436906120d9565b9150506103a4565b5092915050565b61044d610af8565b6040517fd9defd830000000000000000000000000000000000000000000000000000000081523360048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063d9defd8390602401602060405180830381865afa1580156104ca573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104ee91906120f2565b6040518060400160405280600281526020017f3131000000000000000000000000000000000000000000000000000000000000815250906105425760405162461bcd60e51b81526004016102d4919061204c565b5061056b816001600160a01b03166000908152600260205260409020805460ff19166001179055565b50565b610576610af8565b6001600160a01b0381166105f25760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084016102d4565b61056b81610b52565b60026000540361064d5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016102d4565b6002600055565b600080836020015160008151811061066e5761066e61205f565b60200260200101516000015160008151811061068c5761068c61205f565b60209081029190910181015160600151604086018051309091529186015180519193503392916000919082906106c4576106c461205f565b60200260200101516040015187602001516000815181106106e7576106e761205f565b6020026020010151600001516000815181106107055761070561205f565b602002602001015160200151815181106107215761072161205f565b6020026020010151905061073c816001600160a01b03161590565b1561079b5760408051808201909152600181527f350000000000000000000000000000000000000000000000000000000000000060208201523485146107955760405162461bcd60e51b81526004016102d4919061204c565b506107b9565b8084156107b7576107b76001600160a01b038216853088610be8565b505b60005b876020015151811015610aec576000886020015182815181106107e1576107e161205f565b6020026020010151905060018960200151516107fd919061210f565b8203610813576001600160a01b03841660408a01525b6000816040015182600001516000815181106108315761083161205f565b6020026020010151602001518151811061084d5761084d61205f565b602002602001015190506000826040015183600001516001856000015151610875919061210f565b815181106108855761088561205f565b602002602001015160400151815181106108a1576108a161205f565b602002602001015190506108b78b858585610c76565b60608301511515600103610a0c578783600001516000815181106108dd576108dd61205f565b6020908102919091010151606001526001600160a01b0382161561098d576003546040517f095ea7b30000000000000000000000000000000000000000000000000000000081526001600160a01b039182166004820152602481018a90529083169063095ea7b3906044016020604051808303816000875af1158015610967573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061098b91906120f2565b505b6000610999848d610e8c565b905060006109a68261104a565b6004549091507fbb34382c3937f613e2fdc94d32d0a47bac51fe41c2b10ad297d4353991348d7b906000906001600160a01b03168c8483602002015188888f8f6040516109fa989796959493929190612140565b60405180910390a1519850610ab49050565b878360000151600081518110610a2457610a2461205f565b602002602001015160600181815250506000610a41848d8d61113b565b90507fbb34382c3937f613e2fdc94d32d0a47bac51fe41c2b10ad297d4353991348d7b6001610a8f8660000151600081518110610a8057610a8061205f565b60200260200101516000015190565b8b8487878e8e604051610aa9989796959493929190612140565b60405180910390a197505b60018b6020015151610ac6919061210f565b8403610ad657610ad68b896113bb565b5050508080610ae4906120d9565b9150506107bc565b50929695505050505050565b6001546001600160a01b0316331461034e5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016102d4565b600180546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6060610be183836040518060600160405280602781526020016124df60279139611475565b9392505050565b604080516001600160a01b0385811660248301528416604482015260648082018490528251808303909101815260849091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f23b872dd00000000000000000000000000000000000000000000000000000000179052610c709085906114ed565b50505050565b8215610d4e576020840151600090610c8f60018661210f565b81518110610c9f57610c9f61205f565b602002602001015190506000816040015182600001516001846000015151610cc7919061210f565b81518110610cd757610cd761205f565b60200260200101516040015181518110610cf357610cf361205f565b60200260200101519050806001600160a01b0316836001600160a01b031614604051806040016040528060018152602001600760fb1b81525090610d4a5760405162461bcd60e51b81526004016102d4919061204c565b5050505b6001846020015151610d60919061210f565b610d6b846001612193565b11610c70576020840151600090610d83856001612193565b81518110610d9357610d9361205f565b602002602001015190506000836040015184600001516001866000015151610dbb919061210f565b81518110610dcb57610dcb61205f565b60200260200101516040015181518110610de757610de761205f565b60200260200101519050600082604001518360000151600081518110610e0f57610e0f61205f565b60200260200101516020015181518110610e2b57610e2b61205f565b60200260200101519050816001600160a01b0316816001600160a01b031614604051806040016040528060018152602001600760fb1b81525090610e825760405162461bcd60e51b81526004016102d4919061204c565b5050505050505050565b6060610e97836115da565b60408051608081018252308152600060208201819052848301516001600160a01b031682840152606082018190529185015185518051929392610f159291908490610ee457610ee461205f565b60200260200101516020015181518110610f0057610f0061205f565b60200260200101516001600160a01b03161590565b15610f955784518051600090610f2d57610f2d61205f565b6020026020010151606001519050804710156040518060400160405280600181526020017f320000000000000000000000000000000000000000000000000000000000000081525090610f935760405162461bcd60e51b81526004016102d4919061204c565b505b6003548451865160408089015160208a015160608a015192517f945bcec90000000000000000000000000000000000000000000000000000000081526001600160a01b039096169563945bcec9958895610ffa959194909390928b929060040161221a565b60006040518083038185885af1158015611018573d6000803e3d6000fd5b50505050506040513d6000823e601f3d908101601f191682016040526110419190810190612337565b95945050505050565b611052611857565b600160ff1b7f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60005b845181101561111257828582815181106110975761109761205f565b602002602001015113156110c2578481815181106110b7576110b761205f565b602002602001015192505b818582815181106110d5576110d561205f565b60200260200101511215611100578481815181106110f5576110f561205f565b602002602001015191505b8061110a816120d9565b91505061107b565b5061111f816000196123bd565b6040805180820190915290815260208101929092525092915050565b6000611146846115da565b6000846040015185600001516000815181106111645761116461205f565b602002602001015160200151815181106111805761118061205f565b602002602001015190506000856040015186600001516000815181106111a8576111a861205f565b602002602001015160400151815181106111c4576111c461205f565b60200260200101519050600086600001516000815181106111e7576111e761205f565b6020026020010151606001519050600080600181111561120957611209612036565b8751600181111561121c5761121c612036565b1461122857600161122b565b60005b905060006112498960000151600081518110610a8057610a8061205f565b6001600160a01b0381166000908152600260208181526040928390205483518085019094529183527f3130000000000000000000000000000000000000000000000000000000000000908301529192509060ff166112ba5760405162461bcd60e51b81526004016102d4919061204c565b506000816001600160a01b031663395fea09878688878e604001518e6040518763ffffffff1660e01b81526004016112f7969594939291906123ed565b60408051808303816000875af1158015611315573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113399190612442565b905089602001516001815181106113525761135261205f565b602002602001015160001961136791906123bd565b81600160200201511015604051806040016040528060018152602001600d60fa1b815250906113a95760405162461bcd60e51b81526004016102d4919061204c565b50602001519998505050505050505050565b60208201518051600091906113d29060019061210f565b815181106113e2576113e261205f565b6020026020010151905060006001826020015151611400919061210f565b905060008260200151828151811061141a5761141a61205f565b602002602001015160001961142f91906123bd565b905080841015604051806040016040528060018152602001600d60fa1b8152509061146d5760405162461bcd60e51b81526004016102d4919061204c565b505050505050565b6060600080856001600160a01b03168560405161149291906124c2565b600060405180830381855af49150503d80600081146114cd576040519150601f19603f3d011682016040523d82523d6000602084013e6114d2565b606091505b50915091506114e3868383876116ab565b9695505050505050565b6000611542826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031661172c9092919063ffffffff16565b905080516000148061156357508080602001905181019061156391906120f2565b6115d55760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f7420737563636565640000000000000000000000000000000000000000000060648201526084016102d4565b505050565b8051516040805180820190915260018152601b60f91b6020820152906116135760405162461bcd60e51b81526004016102d4919061204c565b50805151611622906001612193565b81604001515114604051806040016040528060018152602001603760f81b815250906116615760405162461bcd60e51b81526004016102d4919061204c565b5080602001515181604001515114604051806040016040528060018152602001603760f81b815250906116a75760405162461bcd60e51b81526004016102d4919061204c565b5050565b6060831561171a578251600003611713576001600160a01b0385163b6117135760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016102d4565b5081611724565b611724838361173b565b949350505050565b60606117248484600085611765565b81511561174b5781518083602001fd5b8060405162461bcd60e51b81526004016102d4919061204c565b6060824710156117dd5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c000000000000000000000000000000000000000000000000000060648201526084016102d4565b600080866001600160a01b031685876040516117f991906124c2565b60006040518083038185875af1925050503d8060008114611836576040519150601f19603f3d011682016040523d82523d6000602084013e61183b565b606091505b509150915061184c878383876116ab565b979650505050505050565b60405180604001604052806002906020820280368337509192915050565b6001600160a01b038116811461056b57600080fd5b60008060008060008060c087890312156118a357600080fd5b863595506020870135945060408701356118bc81611875565b9350606087013560ff811681146118d257600080fd5b9598949750929560808101359460a0909101359350915050565b6000602082840312156118fe57600080fd5b8135610be181611875565b634e487b7160e01b600052604160045260246000fd5b6040516080810167ffffffffffffffff8111828210171561194257611942611909565b60405290565b60405160a0810167ffffffffffffffff8111828210171561194257611942611909565b604051601f8201601f1916810167ffffffffffffffff8111828210171561199457611994611909565b604052919050565b600067ffffffffffffffff8211156119b6576119b6611909565b5060051b60200190565b600082601f8301126119d157600080fd5b813567ffffffffffffffff8111156119eb576119eb611909565b6119fe601f8201601f191660200161196b565b818152846020838601011115611a1357600080fd5b816020850160208301376000918101602001919091529392505050565b600082601f830112611a4157600080fd5b81356020611a56611a518361199c565b61196b565b82815260059290921b84018101918181019086841115611a7557600080fd5b8286015b84811015611a905780358352918301918301611a79565b509695505050505050565b600082601f830112611aac57600080fd5b81356020611abc611a518361199c565b82815260059290921b84018101918181019086841115611adb57600080fd5b8286015b84811015611a90578035611af281611875565b8352918301918301611adf565b801515811461056b57600080fd5b8035611b1881611aff565b919050565b8035611b1881611875565b600082601f830112611b3957600080fd5b81356020611b49611a518361199c565b82815260059290921b84018101918181019086841115611b6857600080fd5b8286015b84811015611a9057803567ffffffffffffffff811115611b8c5760008081fd5b611b9a8986838b01016119c0565b845250918301918301611b6c565b60008060408385031215611bbb57600080fd5b67ffffffffffffffff83351115611bd157600080fd5b60808335840185031215611be457600080fd5b611bec61191f565b6002843585013510611bfd57600080fd5b833584018035825267ffffffffffffffff6020909101351115611c1f57600080fd5b83358401602081013501601f018513611c3757600080fd5b611c4d611a51853586016020810135013561199c565b60208535860181810135018035808452838301939260059190911b90910101871015611c7857600080fd5b6020863587018181013501015b6020873588018181013501803560051b0101811015611eab5767ffffffffffffffff81351115611cb457600080fd5b863587016020810135018135016080818a03601f19011215611cd557600080fd5b611cdd61191f565b67ffffffffffffffff60208301351115611cf657600080fd5b89603f602084013584010112611d0b57600080fd5b611d20611a516020808501358501013561199c565b602083810135840180820135808452918301929160051b016040018c1015611d4757600080fd5b604060208501358501015b60208581013586019081013560051b01604001811015611e255767ffffffffffffffff81351115611d8257600080fd5b60a0602086013586018235018e03603f19011215611d9f57600080fd5b611da7611948565b602086810135870183350160408181013584526060808301359385019390935260808201359084015260a08101359183019190915267ffffffffffffffff60c0909101351115611df657600080fd5b611e128e6020880135880184350160c0810135016040016119c0565b6080820152835260209283019201611d52565b5082525067ffffffffffffffff60408301351115611e4257600080fd5b611e558a60206040850135850101611a30565b602082015267ffffffffffffffff60608301351115611e7357600080fd5b611e868a60206060850135850101611a9b565b6040820152611e9760808301611b0d565b606082015284525060209283019201611c85565b50602083015250611ec184358501604001611b1d565b6040820152606084358501013560608201528092505067ffffffffffffffff60208401351115611ef057600080fd5b611f008460208501358501611b28565b90509250929050565b60008060208385031215611f1c57600080fd5b823567ffffffffffffffff80821115611f3457600080fd5b818501915085601f830112611f4857600080fd5b813581811115611f5757600080fd5b8660208260051b8501011115611f6c57600080fd5b60209290920196919550909350505050565b60005b83811015611f99578181015183820152602001611f81565b50506000910152565b60008151808452611fba816020860160208601611f7e565b601f01601f19169290920160200192915050565b600081518084526020808501808196508360051b8101915082860160005b85811015612016578284038952612004848351611fa2565b98850198935090840190600101611fec565b5091979650505050505050565b602081526000610be16020830184611fce565b634e487b7160e01b600052602160045260246000fd5b602081526000610be16020830184611fa2565b634e487b7160e01b600052603260045260246000fd5b6000808335601e1984360301811261208c57600080fd5b83018035915067ffffffffffffffff8211156120a757600080fd5b6020019150368190038213156120bc57600080fd5b9250929050565b634e487b7160e01b600052601160045260246000fd5b6000600182016120eb576120eb6120c3565b5060010190565b60006020828403121561210457600080fd5b8151610be181611aff565b81810381811115610336576103366120c3565b6002811061056b57634e487b7160e01b600052602160045260246000fd5b610100810161214e8a612122565b9881526001600160a01b039788166020820152604081019690965260608601949094529185166080850152841660a0840152831660c083015290911660e09091015290565b80820180821115610336576103366120c3565b600081518084526020808501945080840160005b838110156121df5781516001600160a01b0316875295820195908201906001016121ba565b509495945050505050565b600081518084526020808501945080840160005b838110156121df578151875295820195908201906001016121fe565b600061012080830161222b8a612122565b89845260208085019290925288519081905261014080850192600583901b8601909101918a820160005b828110156122b85787850361013f190186528151805186528481015185870152604080820151908701526060808201519087015260809081015160a0918701829052906122a481880183611fa2565b978601979650505090830190600101612255565b5050505083810360408501526122ce81896121a6565b91505061231060608401876001600160a01b03808251168352602082015115156020840152806040830151166040840152506060810151151560608301525050565b82810360e084015261232281866121ea565b91505082610100830152979650505050505050565b6000602080838503121561234a57600080fd5b825167ffffffffffffffff81111561236157600080fd5b8301601f8101851361237257600080fd5b8051612380611a518261199c565b81815260059190911b8201830190838101908783111561239f57600080fd5b928401925b8284101561184c578351825292840192908401906123a4565b80820260008212600160ff1b841416156123d9576123d96120c3565b8181058314821517610336576103366120c3565b60006001600160a01b038089168352876020840152808716604084015261241386612122565b85606084015280851660808401525060c060a083015261243660c0830184611fce565b98975050505050505050565b60006040828403121561245457600080fd5b82601f83011261246357600080fd5b6040516040810181811067ffffffffffffffff8211171561248657612486611909565b806040525080604084018581111561249d57600080fd5b845b818110156124b757805183526020928301920161249f565b509195945050505050565b600082516124d4818460208701611f7e565b919091019291505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a26469706673582212208ee92dec4ade83a5696083c01f273653a1b2410bf704dc331e4762867a0371a064736f6c63430008130033";

type RouterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RouterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Router__factory extends ContractFactory {
  constructor(...args: RouterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _synthex: PromiseOrValue<string>,
    _vault: PromiseOrValue<string>,
    synthPools: PromiseOrValue<string>[],
    _owner: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Router> {
    return super.deploy(
      _synthex,
      _vault,
      synthPools,
      _owner,
      overrides || {}
    ) as Promise<Router>;
  }
  override getDeployTransaction(
    _synthex: PromiseOrValue<string>,
    _vault: PromiseOrValue<string>,
    synthPools: PromiseOrValue<string>[],
    _owner: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _synthex,
      _vault,
      synthPools,
      _owner,
      overrides || {}
    );
  }
  override attach(address: string): Router {
    return super.attach(address) as Router;
  }
  override connect(signer: Signer): Router__factory {
    return super.connect(signer) as Router__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RouterInterface {
    return new utils.Interface(_abi) as RouterInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Router {
    return new Contract(address, _abi, signerOrProvider) as Router;
  }
}
