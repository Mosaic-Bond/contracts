/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  StakingRewards,
  StakingRewardsInterface,
} from "../../../../contracts/utils/rewards/StakingRewards";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_rewardsToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "_stakingToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "_system",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "initialRewardsDuration",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Recovered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "reward",
        type: "uint256",
      },
    ],
    name: "RewardAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "reward",
        type: "uint256",
      },
    ],
    name: "RewardPaid",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "newDuration",
        type: "uint256",
      },
    ],
    name: "RewardsDurationUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Staked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdrawn",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "earned",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "exit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getReward",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getRewardForDuration",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastTimeRewardApplicable",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastUpdateTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "reward",
        type: "uint256",
      },
    ],
    name: "notifyReward",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "periodFinish",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardPerToken",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardPerTokenStored",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "rewards",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardsDuration",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardsToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_rewardsDuration",
        type: "uint256",
      },
    ],
    name: "setRewardsDuration",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "stake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stakingToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "synthex",
    outputs: [
      {
        internalType: "contract SyntheX",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userRewardPerTokenPaid",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161122538038061122583398101604081905261002f916100ad565b600160008181558154600280546001600160a01b039889166001600160a01b03199182161790915560038054978916979091169690961790955560048190556005556006919091559216610100026001600160a81b03199091161790556100f8565b80516001600160a01b03811681146100a857600080fd5b919050565b600080600080608085870312156100c357600080fd5b6100cc85610091565b93506100da60208601610091565b92506100e860408601610091565b6060959095015193969295505050565b61111e806101076000396000f3fe608060405234801561001057600080fd5b506004361061018c5760003560e01c80637b0a47ee116100e3578063cc1a378f1161008c578063df136d6511610066578063df136d6514610315578063e9fad8ee1461031e578063ebe2b12b1461032657600080fd5b8063cc1a378f146102e7578063cd3daf9d146102fa578063d1af0c7d1461030257600080fd5b8063a301f684116100bd578063a301f684146102b3578063a694fc3a146102cb578063c8f33c91146102de57600080fd5b80637b0a47ee1461028257806380faa57d1461028b5780638b8763471461029357600080fd5b8063386a95251161014557806360993b5b1161011f57806360993b5b1461022457806370a082311461023757806372f702f31461025757600080fd5b8063386a9525146101fd5780633d18b912146102065780635c975abb1461020e57600080fd5b806318160ddd1161017657806318160ddd146101d75780631c1f78eb146101e05780632e1a7d4d146101e857600080fd5b80628cc262146101915780630700037d146101b7575b600080fd5b6101a461019f366004610f9c565b61032f565b6040519081526020015b60405180910390f35b6101a46101c5366004610f9c565b600a6020526000908152604090205481565b6101a4600b5481565b6101a46103ad565b6101fb6101f6366004610fc5565b6103cb565b005b6101a460065481565b6101fb61051d565b60015460ff1660405190151581526020016101ae565b6101fb610232366004610fc5565b610603565b6101a4610245366004610f9c565b600c6020526000908152604090205481565b60035461026a906001600160a01b031681565b6040516001600160a01b0390911681526020016101ae565b6101a460055481565b6101a46107ca565b6101a46102a1366004610f9c565b60096020526000908152604090205481565b60015461026a9061010090046001600160a01b031681565b6101fb6102d9366004610fc5565b6107e1565b6101a460075481565b6101fb6102f5366004610fc5565b610925565b6101a4610ab9565b60025461026a906001600160a01b031681565b6101a460085481565b6101fb610b04565b6101a460045481565b6001600160a01b0381166000908152600a602090815260408083205460099092528220546103a791906103a190670de0b6b3a76400009061039b9061037c90610376610ab9565b90610b25565b6001600160a01b0388166000908152600c602052604090205490610b38565b90610b44565b90610b50565b92915050565b60006103c6600654600554610b3890919063ffffffff16565b905090565b6103d3610b5c565b336103dc610ab9565b6008556103e76107ca565b6007556001600160a01b0381161561042e576104028161032f565b6001600160a01b0382166000908152600a60209081526040808320939093556008546009909152919020555b600082116104835760405162461bcd60e51b815260206004820152601160248201527f43616e6e6f74207769746864726177203000000000000000000000000000000060448201526064015b60405180910390fd5b600b546104909083610b25565b600b55336000908152600c60205260409020546104ad9083610b25565b336000818152600c60205260409020919091556003546104d9916001600160a01b039091169084610bb5565b60405182815233907f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d5906020015b60405180910390a25061051a6001600055565b50565b610525610b5c565b3361052e610ab9565b6008556105396107ca565b6007556001600160a01b03811615610580576105548161032f565b6001600160a01b0382166000908152600a60209081526040808320939093556008546009909152919020555b336000908152600a602052604090205480156105f557336000818152600a60205260408120556002546105bf916001600160a01b039091169083610bb5565b60405181815233907fe2403640ba68fed3a2f88b7557551d1993f84b99bb10ff833f0cf8db0c5e04869060200160405180910390a25b50506106016001600055565b565b600061060d610ab9565b6008556106186107ca565b6007556001600160a01b0381161561065f576106338161032f565b6001600160a01b0382166000908152600a60209081526040808320939093556008546009909152919020555b60015460405163b44784f360e01b81523360048201526101009091046001600160a01b03169063b44784f390602401602060405180830381865afa1580156106ab573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106cf9190610fde565b61071b5760405162461bcd60e51b815260206004820152601660248201527f43616c6c6572206973206e6f7420616e2061646d696e00000000000000000000604482015260640161047a565b600454421061073a57600654610732908390610b44565b60055561077d565b60045460009061074a9042610b25565b9050600061076360055483610b3890919063ffffffff16565b6006549091506107779061039b8684610b50565b60055550505b4260078190556006546107909190610b50565b6004556040518281527fde88a922e0d3b88b24e9623efeb464919c6bf9f66857a65e2bfcf2ce87a9433d9060200160405180910390a15050565b600060045442106107dc575060045490565b504290565b6107e9610b5c565b6107f1610c63565b336107fa610ab9565b6008556108056107ca565b6007556001600160a01b0381161561084c576108208161032f565b6001600160a01b0382166000908152600a60209081526040808320939093556008546009909152919020555b6000821161089c5760405162461bcd60e51b815260206004820152600e60248201527f43616e6e6f74207374616b652030000000000000000000000000000000000000604482015260640161047a565b600b546108a99083610b50565b600b55336000908152600c60205260409020546108c69083610b50565b336000818152600c60205260409020919091556003546108f3916001600160a01b03909116903085610cb6565b60405182815233907f9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d90602001610507565b60015460405163b44784f360e01b81523360048201526101009091046001600160a01b03169063b44784f390602401602060405180830381865afa158015610971573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109959190610fde565b6109e15760405162461bcd60e51b815260206004820152601660248201527f43616c6c6572206973206e6f7420616e2061646d696e00000000000000000000604482015260640161047a565b6004544211610a7e5760405162461bcd60e51b815260206004820152605860248201527f50726576696f7573207265776172647320706572696f64206d7573742062652060448201527f636f6d706c657465206265666f7265206368616e67696e67207468652064757260648201527f6174696f6e20666f7220746865206e657720706572696f640000000000000000608482015260a40161047a565b60068190556040518181527ffb46ca5a5e06d4540d6387b930a7c978bce0db5f449ec6b3f5d07c6e1d44f2d39060200160405180910390a150565b6000600b54600003610acc575060085490565b6103c6610afb600b5461039b670de0b6b3a7640000610af5600554610af56007546103766107ca565b90610b38565b60085490610b50565b336000908152600c6020526040902054610b1d906103cb565b61060161051d565b6000610b318284611016565b9392505050565b6000610b318284611029565b6000610b318284611040565b6000610b318284611062565b600260005403610bae5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161047a565b6002600055565b6040516001600160a01b038316602482015260448101829052610c5e9084907fa9059cbb00000000000000000000000000000000000000000000000000000000906064015b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff0000000000000000000000000000000000000000000000000000000090931692909217909152610d0d565b505050565b60015460ff16156106015760405162461bcd60e51b815260206004820152601060248201527f5061757361626c653a2070617573656400000000000000000000000000000000604482015260640161047a565b6040516001600160a01b0380851660248301528316604482015260648101829052610d079085907f23b872dd0000000000000000000000000000000000000000000000000000000090608401610bfa565b50505050565b6000610d62826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316610df59092919063ffffffff16565b9050805160001480610d83575080806020019051810190610d839190610fde565b610c5e5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f74207375636365656400000000000000000000000000000000000000000000606482015260840161047a565b6060610e048484600085610e0c565b949350505050565b606082471015610e845760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c0000000000000000000000000000000000000000000000000000606482015260840161047a565b600080866001600160a01b03168587604051610ea09190611099565b60006040518083038185875af1925050503d8060008114610edd576040519150601f19603f3d011682016040523d82523d6000602084013e610ee2565b606091505b5091509150610ef387838387610efe565b979650505050505050565b60608315610f6d578251600003610f66576001600160a01b0385163b610f665760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161047a565b5081610e04565b610e048383815115610f825781518083602001fd5b8060405162461bcd60e51b815260040161047a91906110b5565b600060208284031215610fae57600080fd5b81356001600160a01b0381168114610b3157600080fd5b600060208284031215610fd757600080fd5b5035919050565b600060208284031215610ff057600080fd5b81518015158114610b3157600080fd5b634e487b7160e01b600052601160045260246000fd5b818103818111156103a7576103a7611000565b80820281158282048414176103a7576103a7611000565b60008261105d57634e487b7160e01b600052601260045260246000fd5b500490565b808201808211156103a7576103a7611000565b60005b83811015611090578181015183820152602001611078565b50506000910152565b600082516110ab818460208701611075565b9190910192915050565b60208152600082518060208401526110d4816040850160208701611075565b601f01601f1916919091016040019291505056fea2646970667358221220c8ebd88e1a67f019d6935b1ee692419d8eeede5994532a85e221e0ec326bc15a64736f6c63430008130033";

type StakingRewardsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: StakingRewardsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class StakingRewards__factory extends ContractFactory {
  constructor(...args: StakingRewardsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _rewardsToken: PromiseOrValue<string>,
    _stakingToken: PromiseOrValue<string>,
    _system: PromiseOrValue<string>,
    initialRewardsDuration: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<StakingRewards> {
    return super.deploy(
      _rewardsToken,
      _stakingToken,
      _system,
      initialRewardsDuration,
      overrides || {}
    ) as Promise<StakingRewards>;
  }
  override getDeployTransaction(
    _rewardsToken: PromiseOrValue<string>,
    _stakingToken: PromiseOrValue<string>,
    _system: PromiseOrValue<string>,
    initialRewardsDuration: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _rewardsToken,
      _stakingToken,
      _system,
      initialRewardsDuration,
      overrides || {}
    );
  }
  override attach(address: string): StakingRewards {
    return super.attach(address) as StakingRewards;
  }
  override connect(signer: Signer): StakingRewards__factory {
    return super.connect(signer) as StakingRewards__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StakingRewardsInterface {
    return new utils.Interface(_abi) as StakingRewardsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): StakingRewards {
    return new Contract(address, _abi, signerOrProvider) as StakingRewards;
  }
}
