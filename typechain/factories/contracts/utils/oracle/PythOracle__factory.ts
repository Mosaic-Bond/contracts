/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  PayableOverrides,
  BytesLike,
  BigNumberish,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  PythOracle,
  PythOracleInterface,
} from "../../../../contracts/utils/oracle/PythOracle";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IPyth",
        name: "_pyth",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "assets",
        type: "address[]",
      },
      {
        internalType: "bytes32[]",
        name: "sources",
        type: "bytes32[]",
      },
      {
        internalType: "address",
        name: "fallbackOracle",
        type: "address",
      },
      {
        internalType: "address",
        name: "baseCurrency",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "baseCurrencyUnit",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "source",
        type: "bytes32",
      },
    ],
    name: "AssetSourceUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "baseCurrency",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "baseCurrencyUnit",
        type: "uint256",
      },
    ],
    name: "BaseCurrencySet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "fallbackOracle",
        type: "address",
      },
    ],
    name: "FallbackOracleUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "BASE_CURRENCY",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "BASE_CURRENCY_UNIT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
    ],
    name: "getAssetPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "assets",
        type: "address[]",
      },
    ],
    name: "getAssetsPrices",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getFallbackOracle",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
    ],
    name: "getSourceOfAsset",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pyth",
    outputs: [
      {
        internalType: "contract IPyth",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "assets",
        type: "address[]",
      },
      {
        internalType: "bytes32[]",
        name: "sources",
        type: "bytes32[]",
      },
    ],
    name: "setAssetSources",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "fallbackOracle",
        type: "address",
      },
    ],
    name: "setFallbackOracle",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes[]",
        name: "pythUpdateData",
        type: "bytes[]",
      },
    ],
    name: "updatePrices",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60c0604052604051620015263803806200152683398101604081905262000026916200039e565b6200003133620000b6565b600180546001600160a01b0319166001600160a01b038816179055620000578362000106565b62000063858562000150565b6001600160a01b038216608081905260a08290526040518281527fe27c4c1372396a3d15a9922f74f9dfc7c72b1ad6d63868470787249c356454c19060200160405180910390a2505050505050620004f2565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600380546001600160a01b0319166001600160a01b0383169081179091556040517fce7a780d33665b1ea097af5f155e3821b809ecbaa839d3b33aa83ba28168cefb90600090a250565b8051825114620001995760405162461bcd60e51b815260206004820152601060248201526f1253959053125117d05491d55351539560821b604482015260640160405180910390fd5b60005b82518110156200028c57818181518110620001bb57620001bb620004b4565b602002602001015160026000858481518110620001dc57620001dc620004b4565b60200260200101516001600160a01b03166001600160a01b03168152602001908152602001600020819055508181815181106200021d576200021d620004b4565b60200260200101518382815181106200023a576200023a620004b4565b60200260200101516001600160a01b03167fdcb94a871091cc58901744f251f3df654c2e3c2a5745ed991e2e2457255324b960405160405180910390a3806200028381620004ca565b9150506200019c565b505050565b6001600160a01b0381168114620002a757600080fd5b50565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b0381118282101715620002eb57620002eb620002aa565b604052919050565b60006001600160401b038211156200030f576200030f620002aa565b5060051b60200190565b8051620003268162000291565b919050565b600082601f8301126200033d57600080fd5b81516020620003566200035083620002f3565b620002c0565b82815260059290921b840181019181810190868411156200037657600080fd5b8286015b848110156200039357805183529183019183016200037a565b509695505050505050565b60008060008060008060c08789031215620003b857600080fd5b8651620003c58162000291565b602088810151919750906001600160401b0380821115620003e557600080fd5b818a0191508a601f830112620003fa57600080fd5b81516200040b6200035082620002f3565b81815260059190911b8301840190848101908d8311156200042b57600080fd5b938501935b8285101562000456578451620004468162000291565b8252938501939085019062000430565b60408d0151909a5094505050808311156200047057600080fd5b50506200048089828a016200032b565b945050620004916060880162000319565b9250620004a16080880162000319565b915060a087015190509295509295509295565b634e487b7160e01b600052603260045260246000fd5b600060018201620004eb57634e487b7160e01b600052601160045260246000fd5b5060010190565b60805160a05161100062000526600039600081816101a2015261059e015260008181610285015261057301526110006000f3fe6080604052600436106100d65760003560e01c80638da5cb5b1161007f578063b3596f0711610059578063b3596f0714610253578063e19f470014610273578063f2fde38b146102a7578063f98d06f0146102c757600080fd5b80638da5cb5b146101d257806392bf2be0146101f05780639d23d9f21461022657600080fd5b80636210308c116100b05780636210308c14610144578063715018a61461017b5780638c89b64f1461019057600080fd5b80630a4ccbeb146100e2578063170aee7314610104578063574b5c331461012457600080fd5b366100dd57005b600080fd5b3480156100ee57600080fd5b506101026100fd366004610b4f565b6102e7565b005b34801561011057600080fd5b5061010261011f366004610b91565b6103f9565b34801561013057600080fd5b5061010261013f366004610bba565b61040d565b34801561015057600080fd5b506003546001600160a01b03165b6040516001600160a01b0390911681526020015b60405180910390f35b34801561018757600080fd5b50610102610488565b34801561019c57600080fd5b506101c47f000000000000000000000000000000000000000000000000000000000000000081565b604051908152602001610172565b3480156101de57600080fd5b506000546001600160a01b031661015e565b3480156101fc57600080fd5b506101c461020b366004610b91565b6001600160a01b031660009081526002602052604090205490565b34801561023257600080fd5b50610246610241366004610b4f565b61049c565b6040516101729190610c26565b34801561025f57600080fd5b506101c461026e366004610b91565b610553565b34801561027f57600080fd5b5061015e7f000000000000000000000000000000000000000000000000000000000000000081565b3480156102b357600080fd5b506101026102c2366004610b91565b61075a565b3480156102d357600080fd5b5060015461015e906001600160a01b031681565b6001546040517fd47eed450000000000000000000000000000000000000000000000000000000081526000916001600160a01b03169063d47eed45906103339086908690600401610c93565b602060405180830381865afa158015610350573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103749190610d2f565b6001546040517fef9e5e280000000000000000000000000000000000000000000000000000000081529192506001600160a01b03169063ef9e5e289083906103c29087908790600401610c93565b6000604051808303818588803b1580156103db57600080fd5b505af11580156103ef573d6000803e3d6000fd5b5050505050505050565b6104016107ec565b61040a81610846565b50565b6104156107ec565b6104828484808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152505060408051602080880282810182019093528782529093508792508691829185019084908082843760009201919091525061089d92505050565b50505050565b6104906107ec565b61049a60006109d6565b565b606060008267ffffffffffffffff8111156104b9576104b9610d48565b6040519080825280602002602001820160405280156104e2578160200160208202803683370190505b50905060005b838110156105495761051a85858381811061050557610505610d5e565b905060200201602081019061026e9190610b91565b82828151811061052c5761052c610d5e565b60209081029190910101528061054181610d8a565b9150506104e8565b5090505b92915050565b6001600160a01b03808216600081815260026020526040812054909290917f000000000000000000000000000000000000000000000000000000000000000090911690036105c357507f000000000000000000000000000000000000000000000000000000000000000092915050565b8061063d5760035460405163b3596f0760e01b81526001600160a01b0385811660048301529091169063b3596f0790602401602060405180830381865afa158015610612573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106369190610d2f565b9392505050565b6001546040517f31d98b3f000000000000000000000000000000000000000000000000000000008152600481018390526000916001600160a01b0316906331d98b3f90602401608060405180830381865afa1580156106a0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106c49190610dd2565b905060006106d3826008610a33565b905080156106e357949350505050565b60035460405163b3596f0760e01b81526001600160a01b0387811660048301529091169063b3596f0790602401602060405180830381865afa15801561072d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107519190610d2f565b95945050505050565b6107626107ec565b6001600160a01b0381166107e35760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b61040a816109d6565b6000546001600160a01b0316331461049a5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016107da565b6003805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0383169081179091556040517fce7a780d33665b1ea097af5f155e3821b809ecbaa839d3b33aa83ba28168cefb90600090a250565b80518251146108ee5760405162461bcd60e51b815260206004820152601060248201527f494e56414c49445f415247554d454e540000000000000000000000000000000060448201526064016107da565b60005b82518110156109d15781818151811061090c5761090c610d5e565b60200260200101516002600085848151811061092a5761092a610d5e565b60200260200101516001600160a01b03166001600160a01b031681526020019081526020016000208190555081818151811061096857610968610d5e565b602002602001015183828151811061098257610982610d5e565b60200260200101516001600160a01b03167fdcb94a871091cc58901744f251f3df654c2e3c2a5745ed991e2e2457255324b960405160405180910390a3806109c981610d8a565b9150506108f1565b505050565b600080546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600080836000015160070b1280610a5157506000836040015160030b135b80610a64575060fe19836040015160030b125b15610a6e57600080fd5b60008360400151600019610a829190610e62565b90506000610a908285610e82565b60ff1610610ace57610aa28184610e82565b610ab09060ff16600a610f7f565b8451610ac6919067ffffffffffffffff16610f91565b91505061054d565b610ad88382610e82565b610ae69060ff16600a610f7f565b8451610ac6919067ffffffffffffffff16610fa8565b5092915050565b60008083601f840112610b1557600080fd5b50813567ffffffffffffffff811115610b2d57600080fd5b6020830191508360208260051b8501011115610b4857600080fd5b9250929050565b60008060208385031215610b6257600080fd5b823567ffffffffffffffff811115610b7957600080fd5b610b8585828601610b03565b90969095509350505050565b600060208284031215610ba357600080fd5b81356001600160a01b038116811461063657600080fd5b60008060008060408587031215610bd057600080fd5b843567ffffffffffffffff80821115610be857600080fd5b610bf488838901610b03565b90965094506020870135915080821115610c0d57600080fd5b50610c1a87828801610b03565b95989497509550505050565b6020808252825182820181905260009190848201906040850190845b81811015610c5e57835183529284019291840191600101610c42565b50909695505050505050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b60208082528181018390526000906040600585901b8401810190840186845b87811015610d2257868403603f190183528135368a9003601e19018112610cd857600080fd5b8901858101903567ffffffffffffffff811115610cf457600080fd5b803603821315610d0357600080fd5b610d0e868284610c6a565b955050509184019190840190600101610cb2565b5091979650505050505050565b600060208284031215610d4157600080fd5b5051919050565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060018201610d9c57610d9c610d74565b5060010190565b805167ffffffffffffffff81168114610dbb57600080fd5b919050565b8051600381900b8114610dbb57600080fd5b600060808284031215610de457600080fd5b6040516080810181811067ffffffffffffffff82111715610e1557634e487b7160e01b600052604160045260246000fd5b6040528251600781900b8114610e2a57600080fd5b8152610e3860208401610da3565b6020820152610e4960408401610dc0565b6040820152606083015160608201528091505092915050565b60008260030b8260030b028060030b9150808214610afc57610afc610d74565b60ff828116828216039081111561054d5761054d610d74565b600181815b80851115610ed6578160001904821115610ebc57610ebc610d74565b80851615610ec957918102915b93841c9390800290610ea0565b509250929050565b600082610eed5750600161054d565b81610efa5750600061054d565b8160018114610f105760028114610f1a57610f36565b600191505061054d565b60ff841115610f2b57610f2b610d74565b50506001821b61054d565b5060208310610133831016604e8410600b8410161715610f59575081810a61054d565b610f638383610e9b565b8060001904821115610f7757610f77610d74565b029392505050565b600061063663ffffffff841683610ede565b808202811582820484141761054d5761054d610d74565b600082610fc557634e487b7160e01b600052601260045260246000fd5b50049056fea2646970667358221220acc772092222f609792fb21d89cb80a925688b0bdddc4aae981b0c69bc41cc1664736f6c63430008130033";

type PythOracleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PythOracleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PythOracle__factory extends ContractFactory {
  constructor(...args: PythOracleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _pyth: PromiseOrValue<string>,
    assets: PromiseOrValue<string>[],
    sources: PromiseOrValue<BytesLike>[],
    fallbackOracle: PromiseOrValue<string>,
    baseCurrency: PromiseOrValue<string>,
    baseCurrencyUnit: PromiseOrValue<BigNumberish>,
    overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
  ): Promise<PythOracle> {
    return super.deploy(
      _pyth,
      assets,
      sources,
      fallbackOracle,
      baseCurrency,
      baseCurrencyUnit,
      overrides || {}
    ) as Promise<PythOracle>;
  }
  override getDeployTransaction(
    _pyth: PromiseOrValue<string>,
    assets: PromiseOrValue<string>[],
    sources: PromiseOrValue<BytesLike>[],
    fallbackOracle: PromiseOrValue<string>,
    baseCurrency: PromiseOrValue<string>,
    baseCurrencyUnit: PromiseOrValue<BigNumberish>,
    overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _pyth,
      assets,
      sources,
      fallbackOracle,
      baseCurrency,
      baseCurrencyUnit,
      overrides || {}
    );
  }
  override attach(address: string): PythOracle {
    return super.attach(address) as PythOracle;
  }
  override connect(signer: Signer): PythOracle__factory {
    return super.connect(signer) as PythOracle__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PythOracleInterface {
    return new utils.Interface(_abi) as PythOracleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PythOracle {
    return new Contract(address, _abi, signerOrProvider) as PythOracle;
  }
}
