/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  MockToken,
  MockTokenInterface,
} from "../../../../contracts/utils/mock/MockToken";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "__decimals",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "InvalidShortString",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "str",
        type: "string",
      },
    ],
    name: "StringTooLong",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "EIP712DomainChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_decimals",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "eip712Domain",
    outputs: [
      {
        internalType: "bytes1",
        name: "fields",
        type: "bytes1",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "version",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "verifyingContract",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "salt",
        type: "bytes32",
      },
      {
        internalType: "uint256[]",
        name: "extensions",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x61016060405260126009553480156200001757600080fd5b506040516200187b3803806200187b8339810160408190526200003a916200028e565b6040805180820190915260018152603160f81b6020820152839081908185600362000066838262000390565b50600462000075828262000390565b5062000087915083905060056200013c565b61012052620000988160066200013c565b61014052815160208084019190912060e052815190820120610100524660a0526200012660e05161010051604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201529081019290925260608201524660808201523060a082015260009060c00160405160208183030381529060405280519060200120905090565b60805250503060c0525060095550620004b69050565b60006020835110156200015c57620001548362000175565b90506200016f565b8162000169848262000390565b5060ff90505b92915050565b600080829050601f81511115620001ac578260405163305a27a960e01b8152600401620001a391906200045c565b60405180910390fd5b8051620001b98262000491565b179392505050565b634e487b7160e01b600052604160045260246000fd5b60005b83811015620001f4578181015183820152602001620001da565b50506000910152565b600082601f8301126200020f57600080fd5b81516001600160401b03808211156200022c576200022c620001c1565b604051601f8301601f19908116603f01168101908282118183101715620002575762000257620001c1565b816040528381528660208588010111156200027157600080fd5b62000284846020830160208901620001d7565b9695505050505050565b600080600060608486031215620002a457600080fd5b83516001600160401b0380821115620002bc57600080fd5b620002ca87838801620001fd565b94506020860151915080821115620002e157600080fd5b50620002f086828701620001fd565b925050604084015190509250925092565b600181811c908216806200031657607f821691505b6020821081036200033757634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200038b57600081815260208120601f850160051c81016020861015620003665750805b601f850160051c820191505b81811015620003875782815560010162000372565b5050505b505050565b81516001600160401b03811115620003ac57620003ac620001c1565b620003c481620003bd845462000301565b846200033d565b602080601f831160018114620003fc5760008415620003e35750858301515b600019600386901b1c1916600185901b17855562000387565b600085815260208120601f198616915b828110156200042d578886015182559484019460019091019084016200040c565b50858210156200044c5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60208152600082518060208401526200047d816040850160208701620001d7565b601f01601f19169190910160400192915050565b80516020808301519190811015620003375760001960209190910360031b1b16919050565b60805160a05160c05160e05161010051610120516101405161136a620005116000396000610428015260006103fd01526000610b7501526000610b4d01526000610aa801526000610ad201526000610afc015261136a6000f3fe608060405234801561001057600080fd5b506004361061011b5760003560e01c806340c10f19116100b257806395d89b4111610081578063a9059cbb11610066578063a9059cbb14610246578063d505accf14610259578063dd62ed3e1461026c57600080fd5b806395d89b411461022b578063a457c2d71461023357600080fd5b806340c10f19146101bf57806370a08231146101d45780637ecebe00146101fd57806384b0196e1461021057600080fd5b8063313ce567116100ee578063313ce5671461018657806332424aa31461019b5780633644e515146101a457806339509351146101ac57600080fd5b806306fdde0314610120578063095ea7b31461013e57806318160ddd1461016157806323b872dd14610173575b600080fd5b6101286102a5565b60405161013591906110ba565b60405180910390f35b61015161014c3660046110f0565b610337565b6040519015158152602001610135565b6002545b604051908152602001610135565b61015161018136600461111a565b610351565b60095460405160ff9091168152602001610135565b61016560095481565b610165610375565b6101516101ba3660046110f0565b610384565b6101d26101cd3660046110f0565b6103c3565b005b6101656101e2366004611156565b6001600160a01b031660009081526020819052604090205490565b61016561020b366004611156565b6103d1565b6102186103ef565b6040516101359796959493929190611171565b610128610494565b6101516102413660046110f0565b6104a3565b6101516102543660046110f0565b610552565b6101d2610267366004611223565b610560565b61016561027a366004611296565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6060600380546102b4906112c9565b80601f01602080910402602001604051908101604052809291908181526020018280546102e0906112c9565b801561032d5780601f106103025761010080835404028352916020019161032d565b820191906000526020600020905b81548152906001019060200180831161031057829003601f168201915b5050505050905090565b6000336103458185856106c4565b60019150505b92915050565b60003361035f85828561081c565b61036a8585856108ae565b506001949350505050565b600061037f610a9b565b905090565b3360008181526001602090815260408083206001600160a01b038716845290915281205490919061034590829086906103be9087906112fd565b6106c4565b6103cd8282610bc6565b5050565b6001600160a01b03811660009081526007602052604081205461034b565b6000606080828080836104237f00000000000000000000000000000000000000000000000000000000000000006005610c85565b61044e7f00000000000000000000000000000000000000000000000000000000000000006006610c85565b604080516000808252602082019092527f0f000000000000000000000000000000000000000000000000000000000000009b939a50919850469750309650945092509050565b6060600480546102b4906112c9565b3360008181526001602090815260408083206001600160a01b0387168452909152812054909190838110156105455760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760448201527f207a65726f00000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b61036a82868684036106c4565b6000336103458185856108ae565b834211156105b05760405162461bcd60e51b815260206004820152601d60248201527f45524332305065726d69743a206578706972656420646561646c696e65000000604482015260640161053c565b60007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98888886105df8c610d30565b6040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810186905260e001604051602081830303815290604052805190602001209050600061063a82610d58565b9050600061064a82878787610da0565b9050896001600160a01b0316816001600160a01b0316146106ad5760405162461bcd60e51b815260206004820152601e60248201527f45524332305065726d69743a20696e76616c6964207369676e61747572650000604482015260640161053c565b6106b88a8a8a6106c4565b50505050505050505050565b6001600160a01b03831661073f5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460448201527f7265737300000000000000000000000000000000000000000000000000000000606482015260840161053c565b6001600160a01b0382166107bb5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f20616464726560448201527f7373000000000000000000000000000000000000000000000000000000000000606482015260840161053c565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b0383811660009081526001602090815260408083209386168352929052205460001981146108a8578181101561089b5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640161053c565b6108a884848484036106c4565b50505050565b6001600160a01b03831661092a5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f6472657373000000000000000000000000000000000000000000000000000000606482015260840161053c565b6001600160a01b0382166109a65760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201527f6573730000000000000000000000000000000000000000000000000000000000606482015260840161053c565b6001600160a01b03831660009081526020819052604090205481811015610a355760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260448201527f616c616e63650000000000000000000000000000000000000000000000000000606482015260840161053c565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a36108a8565b6000306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016148015610af457507f000000000000000000000000000000000000000000000000000000000000000046145b15610b1e57507f000000000000000000000000000000000000000000000000000000000000000090565b61037f604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201527f0000000000000000000000000000000000000000000000000000000000000000918101919091527f000000000000000000000000000000000000000000000000000000000000000060608201524660808201523060a082015260009060c00160405160208183030381529060405280519060200120905090565b6001600160a01b038216610c1c5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640161053c565b8060026000828254610c2e91906112fd565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b606060ff8314610c9f57610c9883610dc8565b905061034b565b818054610cab906112c9565b80601f0160208091040260200160405190810160405280929190818152602001828054610cd7906112c9565b8015610d245780601f10610cf957610100808354040283529160200191610d24565b820191906000526020600020905b815481529060010190602001808311610d0757829003601f168201915b5050505050905061034b565b6001600160a01b03811660009081526007602052604090208054600181018255905b50919050565b600061034b610d65610a9b565b836040517f19010000000000000000000000000000000000000000000000000000000000008152600281019290925260228201526042902090565b6000806000610db187878787610e07565b91509150610dbe81610ecb565b5095945050505050565b60606000610dd583611033565b604080516020808252818301909252919250600091906020820181803683375050509182525060208101929092525090565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0831115610e3e5750600090506003610ec2565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015610e92573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116610ebb57600060019250925050610ec2565b9150600090505b94509492505050565b6000816004811115610edf57610edf61131e565b03610ee75750565b6001816004811115610efb57610efb61131e565b03610f485760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e61747572650000000000000000604482015260640161053c565b6002816004811115610f5c57610f5c61131e565b03610fa95760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e67746800604482015260640161053c565b6003816004811115610fbd57610fbd61131e565b036110305760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c60448201527f7565000000000000000000000000000000000000000000000000000000000000606482015260840161053c565b50565b600060ff8216601f81111561034b576040517fb3512b0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000815180845260005b8181101561109a5760208185018101518683018201520161107e565b506000602082860101526020601f19601f83011685010191505092915050565b6020815260006110cd6020830184611074565b9392505050565b80356001600160a01b03811681146110eb57600080fd5b919050565b6000806040838503121561110357600080fd5b61110c836110d4565b946020939093013593505050565b60008060006060848603121561112f57600080fd5b611138846110d4565b9250611146602085016110d4565b9150604084013590509250925092565b60006020828403121561116857600080fd5b6110cd826110d4565b7fff00000000000000000000000000000000000000000000000000000000000000881681526000602060e0818401526111ad60e084018a611074565b83810360408501526111bf818a611074565b606085018990526001600160a01b038816608086015260a0850187905284810360c0860152855180825283870192509083019060005b81811015611211578351835292840192918401916001016111f5565b50909c9b505050505050505050505050565b600080600080600080600060e0888a03121561123e57600080fd5b611247886110d4565b9650611255602089016110d4565b95506040880135945060608801359350608088013560ff8116811461127957600080fd5b9699959850939692959460a0840135945060c09093013592915050565b600080604083850312156112a957600080fd5b6112b2836110d4565b91506112c0602084016110d4565b90509250929050565b600181811c908216806112dd57607f821691505b602082108103610d5257634e487b7160e01b600052602260045260246000fd5b8082018082111561034b57634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052602160045260246000fdfea2646970667358221220338b5c508a0d7600e1353b1004a9d5fb3b3c6f298ebfe154bf213fdfa54a62ff64736f6c63430008130033";

type MockTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockToken__factory extends ContractFactory {
  constructor(...args: MockTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _name: PromiseOrValue<string>,
    _symbol: PromiseOrValue<string>,
    __decimals: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MockToken> {
    return super.deploy(
      _name,
      _symbol,
      __decimals,
      overrides || {}
    ) as Promise<MockToken>;
  }
  override getDeployTransaction(
    _name: PromiseOrValue<string>,
    _symbol: PromiseOrValue<string>,
    __decimals: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _name,
      _symbol,
      __decimals,
      overrides || {}
    );
  }
  override attach(address: string): MockToken {
    return super.attach(address) as MockToken;
  }
  override connect(signer: Signer): MockToken__factory {
    return super.connect(signer) as MockToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockTokenInterface {
    return new utils.Interface(_abi) as MockTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockToken {
    return new Contract(address, _abi, signerOrProvider) as MockToken;
  }
}
