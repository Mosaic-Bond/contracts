/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  MockTokenRedeemer,
  MockTokenRedeemerInterface,
} from "../../../../contracts/utils/mock/MockTokenRedeemer";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_system",
        type: "address",
      },
      {
        internalType: "address",
        name: "_LOCKED_TOKEN",
        type: "address",
      },
      {
        internalType: "address",
        name: "_TOKEN",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_lockPeriod",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_unlockPeriod",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_percUnlockAtRelease",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_lockPeriod",
        type: "uint256",
      },
    ],
    name: "SetLockPeriod",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "requestId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "UnlockRequested",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "requestId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Unlocked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    inputs: [],
    name: "BASIS_POINTS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "LOCKED_TOKEN",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SCALER",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "TOKEN",
    outputs: [
      {
        internalType: "contract IERC20Upgradeable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_unlockIndex",
        type: "uint256",
      },
    ],
    name: "getRequestId",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "lock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "lockPeriod",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "percUnlockAtRelease",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "remainingQuota",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "reservedForUnlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_lockPeriod",
        type: "uint256",
      },
    ],
    name: "setLockPeriod",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "startUnlock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "synthex",
    outputs: [
      {
        internalType: "contract SyntheX",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "_requestIds",
        type: "bytes32[]",
      },
    ],
    name: "unlock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unlockPeriod",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "unlockRequestCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "unlockRequests",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "claimed",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "requestTime",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_requestId",
        type: "bytes32",
      },
    ],
    name: "unlocked",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620018a5380380620018a58339810160408190526200003491620002b2565b6039805460ff191690556200004c8484848462000090565b5050603a80546001600160a01b039586166001600160a01b03199091161790555050603980549190921661010002610100600160a81b031990911617905562000368565b600054610100900460ff16620000f05760405162461bcd60e51b815260206004820152602b60248201526000805160206200188583398151915260448201526a6e697469616c697a696e6760a81b60648201526084015b60405180910390fd5b620000fe8484848462000104565b50505050565b600054610100900460ff16620001605760405162461bcd60e51b815260206004820152602b60248201526000805160206200188583398151915260448201526a6e697469616c697a696e6760a81b6064820152608401620000e7565b604080518082019091526002815261064760f31b60208201526001600160a01b038516620001a35760405162461bcd60e51b8152600401620000e7919062000318565b50604080518082019091526002815261199960f11b60208201526001600160a01b0385163b620001e85760405162461bcd60e51b8152600401620000e7919062000318565b506000805462010000600160b01b031916620100006001600160a01b03871602179055604080518082019091526002815261313360f01b602082015282620002455760405162461bcd60e51b8152600401620000e7919062000318565b50604080518082019091526002815261313360f01b6020820152612710821115620002855760405162461bcd60e51b8152600401620000e7919062000318565b5060029290925560035560045550565b80516001600160a01b0381168114620002ad57600080fd5b919050565b60008060008060008060c08789031215620002cc57600080fd5b620002d78762000295565b9550620002e76020880162000295565b9450620002f76040880162000295565b9350606087015192506080870151915060a087015190509295509295509295565b600060208083528351808285015260005b81811015620003475785810183015185820160400152820162000329565b506000604082860101526040601f19601f8301168501019250505092915050565b61150d80620003786000396000f3fe608060405234801561001057600080fd5b50600436106101825760003560e01c8063779972da116100d8578063d6db44261161008c578063e7017f7811610066578063e7017f78146102e5578063e9fb141e1461032f578063f003f2c01461034257600080fd5b8063d6db4426146102c1578063dd467064146102c9578063e1f1c4a7146102dc57600080fd5b806382bfefc8116100bd57806382bfefc81461028d5780638456cb59146102a6578063a301f684146102ae57600080fd5b8063779972da14610267578063827d81b01461027a57600080fd5b80632e1a7d4d1161013a5780633fd8b02f116101145780633fd8b02f146102185780635c975abb14610221578063692878621461023757600080fd5b80632e1a7d4d146101ea5780633ddd2511146101fd5780633f4ba83a1461021057600080fd5b8063117eb2551161016b578063117eb255146101ac57806320d3a0b4146101cc57806325f62b2a146101d557600080fd5b8063025ddd45146101875780630589789c146101a3575b600080fd5b61019060015481565b6040519081526020015b60405180910390f35b61019060045481565b6101906101ba3660046112ab565b60066020526000908152604090205481565b61019060035481565b6101e86101e33660046112cd565b610351565b005b6101e86101f83660046112cd565b610383565b61019061020b3660046112e6565b6104b4565b6101e86104fc565b61019060025481565b60395460ff16604051901515815260200161019a565b60395461024f9061010090046001600160a01b031681565b6040516001600160a01b03909116815260200161019a565b6101e86102753660046112cd565b6105be565b6101e8610288366004611310565b6106b1565b60005461024f906201000090046001600160a01b031681565b6101e86106fd565b603a5461024f906001600160a01b031681565b6101906107bd565b6101e86102d73660046112cd565b610844565b61019061271081565b6103146102f33660046112cd565b60056020526000908152604090208054600182015460029092015490919083565b6040805193845260208401929092529082015260600161019a565b61019061033d3660046112cd565b610886565b610190670de0b6b3a764000081565b610359610a6c565b6039546103769061010090046001600160a01b0316333084610abf565b6103803382610b76565b50565b603a5460405163b44784f360e01b81523360048201526001600160a01b039091169063b44784f390602401602060405180830381865afa1580156103cb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103ef9190611385565b6104405760405162461bcd60e51b815260206004820152601660248201527f43616c6c6572206973206e6f7420616e2061646d696e0000000000000000000060448201526064015b60405180910390fd5b6104486107bd565b8111156104975760405162461bcd60e51b815260206004820152601a60248201527f4e6f7420656e6f7567682053594e20746f2077697468647261770000000000006044820152606401610437565b600054610380906201000090046001600160a01b03163383610d2b565b6040516bffffffffffffffffffffffff19606084901b166020820152603481018290526000906054016040516020818303038152906040528051906020012090505b92915050565b603a5460405163b44784f360e01b81523360048201526001600160a01b039091169063b44784f390602401602060405180830381865afa158015610544573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105689190611385565b6105b45760405162461bcd60e51b815260206004820152601660248201527f43616c6c6572206973206e6f7420616e2061646d696e000000000000000000006044820152606401610437565b6105bc610d74565b565b603a5460405163b44784f360e01b81523360048201526001600160a01b039091169063b44784f390602401602060405180830381865afa158015610606573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061062a9190611385565b6106765760405162461bcd60e51b815260206004820152601660248201527f43616c6c6572206973206e6f7420616e2061646d696e000000000000000000006044820152606401610437565b60028190556040518181527f10b74ff47741c85819c3e5742d82e410f965b0e1cc86a458674914886eb9d2629060200160405180910390a150565b6106b9610a6c565b60005b818110156106f8576106e6338484848181106106da576106da6113a7565b90506020020135610dc6565b806106f0816113d3565b9150506106bc565b505050565b603a5460405163b44784f360e01b81523360048201526001600160a01b039091169063b44784f390602401602060405180830381865afa158015610745573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107699190611385565b6107b55760405162461bcd60e51b815260206004820152601660248201527f43616c6c6572206973206e6f7420616e2061646d696e000000000000000000006044820152606401610437565b6105bc610f71565b600154600080546040516370a0823160e01b8152306004820152919291620100009091046001600160a01b0316906370a0823190602401602060405180830381865afa158015610811573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061083591906113ec565b61083f9190611405565b905090565b61084c610a6c565b60005461086a906201000090046001600160a01b0316333084610abf565b6039546103809061010090046001600160a01b03163383610d2b565b6000818152600560209081526040808320815160608101835281548082526001830154828601526002928301548285015283518085019094529183527f3231000000000000000000000000000000000000000000000000000000000000938301939093526109075760405162461bcd60e51b8152600401610437919061143c565b50600254816040015161091a919061146f565b4210156040518060400160405280600281526020017f3232000000000000000000000000000000000000000000000000000000000000815250906109715760405162461bcd60e51b8152600401610437919061143c565b5060006002548260400151610986919061146f565b6109909042611405565b90506000600354670de0b6b3a7640000836109ab9190611482565b6109b59190611499565b9050670de0b6b3a76400008111156109d25750670de0b6b3a76400005b6109de61271082611482565b905060008360200151612710670de0b6b3a764000061271060045486610a049190611482565b610a0e9190611499565b670de0b6b3a7640000600454610a249190611482565b610a2e908761146f565b610a389190611405565b8751610a449190611482565b610a4e9190611499565b610a589190611499565b610a629190611405565b9695505050505050565b60395460ff16156105bc5760405162461bcd60e51b815260206004820152601060248201527f5061757361626c653a20706175736564000000000000000000000000000000006044820152606401610437565b6040516001600160a01b0380851660248301528316604482015260648101829052610b709085907f23b872dd00000000000000000000000000000000000000000000000000000000906084015b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff0000000000000000000000000000000000000000000000000000000090931692909217909152610fae565b50505050565b80610b7f6107bd565b10156040518060400160405280600281526020017f313900000000000000000000000000000000000000000000000000000000000081525090610bd55760405162461bcd60e51b8152600401610437919061143c565b506001600160a01b03821660009081526006602090815260408083205490516bffffffffffffffffffffffff19606087901b1692810192909252603482015260540160408051601f1981840301815282825280516020918201206000818152600583528390208054858501909452600285527f3230000000000000000000000000000000000000000000000000000000000000928501929092529350919015610c915760405162461bcd60e51b8152600401610437919061143c565b508281554260028201556000600182018190556001600160a01b0385168152600660205260408120805491610cc5836113d3565b91905055508260016000828254610cdc919061146f565b909155505060408051838152602081018590526001600160a01b038616917f1659b216382c9d81c5fa8729673f92f40edf13de41cfd0ece4bb3974e6595e57910160405180910390a250505050565b6040516001600160a01b0383166024820152604481018290526106f89084907fa9059cbb0000000000000000000000000000000000000000000000000000000090606401610b0c565b610d7c611096565b6039805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b6000610dd182610886565b905080600003610de057505050565b6000546040516370a0823160e01b815230600482015282916201000090046001600160a01b0316906370a0823190602401602060405180830381865afa158015610e2e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e5291906113ec565b1015610ecc576000546040516370a0823160e01b8152306004820152620100009091046001600160a01b0316906370a0823190602401602060405180830381865afa158015610ea5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ec991906113ec565b90505b600054610ee9906201000090046001600160a01b03168483610d2b565b60008281526005602052604081206001018054839290610f0a90849061146f565b925050819055508060016000828254610f239190611405565b909155505060408051838152602081018390526001600160a01b038516917f11f87fd5adcd05786919b8b868f59a70d78ae4eb6f305c5927f9c5b1659841a4910160405180910390a2505050565b610f79610a6c565b6039805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610da93390565b6000611003826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166110e89092919063ffffffff16565b90508051600014806110245750808060200190518101906110249190611385565b6106f85760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152608401610437565b60395460ff166105bc5760405162461bcd60e51b815260206004820152601460248201527f5061757361626c653a206e6f74207061757365640000000000000000000000006044820152606401610437565b60606110f784846000856110ff565b949350505050565b6060824710156111775760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c00000000000000000000000000000000000000000000000000006064820152608401610437565b600080866001600160a01b0316858760405161119391906114bb565b60006040518083038185875af1925050503d80600081146111d0576040519150601f19603f3d011682016040523d82523d6000602084013e6111d5565b606091505b50915091506111e6878383876111f1565b979650505050505050565b60608315611260578251600003611259576001600160a01b0385163b6112595760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610437565b50816110f7565b6110f783838151156112755781518083602001fd5b8060405162461bcd60e51b8152600401610437919061143c565b80356001600160a01b03811681146112a657600080fd5b919050565b6000602082840312156112bd57600080fd5b6112c68261128f565b9392505050565b6000602082840312156112df57600080fd5b5035919050565b600080604083850312156112f957600080fd5b6113028361128f565b946020939093013593505050565b6000806020838503121561132357600080fd5b823567ffffffffffffffff8082111561133b57600080fd5b818501915085601f83011261134f57600080fd5b81358181111561135e57600080fd5b8660208260051b850101111561137357600080fd5b60209290920196919550909350505050565b60006020828403121561139757600080fd5b815180151581146112c657600080fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600182016113e5576113e56113bd565b5060010190565b6000602082840312156113fe57600080fd5b5051919050565b818103818111156104f6576104f66113bd565b60005b8381101561143357818101518382015260200161141b565b50506000910152565b602081526000825180602084015261145b816040850160208701611418565b601f01601f19169190910160400192915050565b808201808211156104f6576104f66113bd565b80820281158282048414176104f6576104f66113bd565b6000826114b657634e487b7160e01b600052601260045260246000fd5b500490565b600082516114cd818460208701611418565b919091019291505056fea26469706673582212208b2d419f770f29274e2d005a279bd93611b0456dfe65c3cf87678482ef8fae8464736f6c63430008130033496e697469616c697a61626c653a20636f6e7472616374206973206e6f742069";

type MockTokenRedeemerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockTokenRedeemerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockTokenRedeemer__factory extends ContractFactory {
  constructor(...args: MockTokenRedeemerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _system: PromiseOrValue<string>,
    _LOCKED_TOKEN: PromiseOrValue<string>,
    _TOKEN: PromiseOrValue<string>,
    _lockPeriod: PromiseOrValue<BigNumberish>,
    _unlockPeriod: PromiseOrValue<BigNumberish>,
    _percUnlockAtRelease: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MockTokenRedeemer> {
    return super.deploy(
      _system,
      _LOCKED_TOKEN,
      _TOKEN,
      _lockPeriod,
      _unlockPeriod,
      _percUnlockAtRelease,
      overrides || {}
    ) as Promise<MockTokenRedeemer>;
  }
  override getDeployTransaction(
    _system: PromiseOrValue<string>,
    _LOCKED_TOKEN: PromiseOrValue<string>,
    _TOKEN: PromiseOrValue<string>,
    _lockPeriod: PromiseOrValue<BigNumberish>,
    _unlockPeriod: PromiseOrValue<BigNumberish>,
    _percUnlockAtRelease: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _system,
      _LOCKED_TOKEN,
      _TOKEN,
      _lockPeriod,
      _unlockPeriod,
      _percUnlockAtRelease,
      overrides || {}
    );
  }
  override attach(address: string): MockTokenRedeemer {
    return super.attach(address) as MockTokenRedeemer;
  }
  override connect(signer: Signer): MockTokenRedeemer__factory {
    return super.connect(signer) as MockTokenRedeemer__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockTokenRedeemerInterface {
    return new utils.Interface(_abi) as MockTokenRedeemerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockTokenRedeemer {
    return new Contract(address, _abi, signerOrProvider) as MockTokenRedeemer;
  }
}
