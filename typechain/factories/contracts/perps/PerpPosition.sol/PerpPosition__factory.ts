/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  PayableOverrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  PerpPosition,
  PerpPositionInterface,
} from "../../../../contracts/perps/PerpPosition.sol/PerpPosition";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IPoolAddressesProvider",
        name: "poolAddressesProvider",
        type: "address",
      },
      {
        internalType: "contract ISynthPool",
        name: "synthPool",
        type: "address",
      },
      {
        internalType: "contract IPyth",
        name: "_pyth",
        type: "address",
      },
    ],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "position",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "tokenLong",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "tokenShort",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "ClosePosition",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "position",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "tokenLong",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "tokenShort",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "OpenPosition",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "ADDRESSES_PROVIDER",
    outputs: [
      {
        internalType: "contract IPoolAddressesProvider",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "POOL",
    outputs: [
      {
        internalType: "contract IPool",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "call",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token1",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "token1Amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "token0",
        type: "address",
      },
    ],
    name: "closePosition",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "fee",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "initiator",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "executeOperation",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getPositionData",
    outputs: [
      {
        internalType: "uint256",
        name: "totalCollateralBase",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalDebtBase",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "availableBorrowsBase",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "currentLiquidationThreshold",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "ltv",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "healthFactor",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes[]",
        name: "data",
        type: "bytes[]",
      },
    ],
    name: "multicall",
    outputs: [
      {
        internalType: "bytes[]",
        name: "results",
        type: "bytes[]",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token0",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "token0Amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "token1",
        type: "address",
      },
    ],
    name: "openPosition",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "supply",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "fromAsset",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "toAsset",
        type: "address",
      },
    ],
    name: "swap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferOut",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes[]",
        name: "pythUpdateData",
        type: "bytes[]",
      },
    ],
    name: "updatePythData",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60e060405260405162002cb738038062002cb783398101604081905262000026916200013d565b826200003233620000d4565b6001600160a01b03811660808190526040805163026b1d5f60e01b8152905163026b1d5f916004808201926020929091908290030181865afa1580156200007d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000a3919062000191565b6001600160a01b0390811660a05292831660c05250600180546001600160a01b0319169190921617905550620001b8565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b03811681146200013a57600080fd5b50565b6000806000606084860312156200015357600080fd5b8351620001608162000124565b6020850151909350620001738162000124565b6040850151909250620001868162000124565b809150509250925092565b600060208284031215620001a457600080fd5b8151620001b18162000124565b9392505050565b60805160a05160c051612a6e62000249600039600081816106a60152818161073a01528181610bbb01528181610c4d01526116d6015260008181610224015281816107b10152818161090e01528181610a7901528181610b0201528181610e4b01528181611931015281816119d701528181611a770152611bae01526000818160ff01526104ce0152612a6e6000f3fe6080604052600436106100e85760003560e01c80637535d2461161008a578063bcfb99fa11610059578063bcfb99fa146102a4578063e8f37963146102c4578063f2b9fdb814610305578063f2fde38b1461032557600080fd5b80637535d2461461021257806376890c58146102465780638da5cb5b14610266578063ac9650d81461028457600080fd5b80634ae00041116100c65780634ae000411461019057806365264cd1146101bd5780636d069a67146101dd578063715018a6146101fd57600080fd5b80630542975c146100ed5780631b11d0ff1461013e5780633a41b2e71461016e575b600080fd5b3480156100f957600080fd5b506101217f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b34801561014a57600080fd5b5061015e610159366004611f77565b610345565b6040519015158152602001610135565b34801561017a57600080fd5b5061018e610189366004612021565b61062c565b005b34801561019c57600080fd5b506101b06101ab366004612144565b6109c1565b60405161013591906121f5565b3480156101c957600080fd5b5061018e6101d8366004612021565b6109de565b3480156101e957600080fd5b5061018e6101f8366004612021565b610f01565b34801561020957600080fd5b5061018e610f1c565b34801561021e57600080fd5b506101217f000000000000000000000000000000000000000000000000000000000000000081565b34801561025257600080fd5b5061018e610261366004612208565b610f30565b34801561027257600080fd5b506000546001600160a01b0316610121565b610297610292366004612258565b610fc5565b6040516101359190612363565b3480156102b057600080fd5b5061018e6102bf366004612258565b61107c565b3480156102d057600080fd5b5060008080808080604080519687526020870195909552938501929092526060840152608083015260a082015260c001610135565b34801561031157600080fd5b5061018e610320366004612208565b611191565b34801561033157600080fd5b5061018e610340366004612376565b61119b565b60006001600160a01b03841630146103a45760405162461bcd60e51b815260206004820152600c60248201527f556e617574686f72697a6564000000000000000000000000000000000000000060448201526064015b60405180910390fd5b6103ef6040518060c0016040528060006001600160a01b03168152602001600081526020016000815260200160006001600160a01b0316815260200160608152602001600081525090565b6001600160a01b03881681526020810187905260408101869052600061041784860186612393565b60a08501526001600160a01b03166060840152905060006002604051908082528060200260200182016040528015610459578160200160208202803683370190505b509050826000015181600081518110610474576104746123d8565b60200260200101906001600160a01b031690816001600160a01b0316815250508260600151816001815181106104ac576104ac6123d8565b60200260200101906001600160a01b031690816001600160a01b0316815250507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663fca513a86040518163ffffffff1660e01b8152600401602060405180830381865afa15801561052a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061054e91906123fe565b6001600160a01b0316639d23d9f2826040518263ffffffff1660e01b8152600401610579919061241b565b600060405180830381865afa158015610596573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526105be9190810190612468565b608084015260008260018111156105d7576105d76124ee565b14156105eb576105e68361122b565b61061a565b60018260018111156105ff576105ff6124ee565b141561060e576105e683611347565b60009350505050610622565b600193505050505b9695505050505050565b610634611489565b600082116106845760405162461bcd60e51b815260206004820152601d60248201527f416d6f756e74206d7573742062652067726561746572207468616e2030000000604482015260640161039b565b604051634f843eeb60e11b81526001600160a01b0384811660048301526000917f000000000000000000000000000000000000000000000000000000000000000090911690639f087dd690602401608060405180830381865afa1580156106ef573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107139190612514565b50604051634f843eeb60e11b81526001600160a01b038681166004830152919450600093507f00000000000000000000000000000000000000000000000000000000000000009091169150639f087dd690602401608060405180830381865afa158015610784573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107a89190612514565b935050505060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663074b2e436040518163ffffffff1660e01b8152600401602060405180830381865afa15801561080d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108319190612577565b6fffffffffffffffffffffffffffffffff1690506000610853612710806125a8565b600161086784670de0b6b3a76400006125a8565b61087191906125a8565b61087b91906125c7565b61271061089084670de0b6b3a76400006125a8565b61089a91906125c7565b6108a491906125e9565b6127106108b185876125e9565b6108c390670de0b6b3a76400006125a8565b6108cd91906125c7565b6108df90670de0b6b3a7640000612601565b6108e99190612601565b90506000670de0b6b3a764000061090083896125a8565b61090a91906125c7565b90507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166342b0b77c308a8a60008b8760405160200161095493929190612636565b60405160208183030381529060405260006040518663ffffffff1660e01b8152600401610985959493929190612660565b600060405180830381600087803b15801561099f57600080fd5b505af11580156109b3573d6000803e3d6000fd5b505050505050505050505050565b60606109cb611489565b6109d68484846114e3565b949350505050565b6109e6611489565b60008211610a365760405162461bcd60e51b815260206004820152601d60248201527f416d6f756e74206d7573742062652067726561746572207468616e2030000000604482015260640161039b565b6040517f35ea6a750000000000000000000000000000000000000000000000000000000081526001600160a01b0384811660048301526000918291610aea9130917f000000000000000000000000000000000000000000000000000000000000000016906335ea6a75906024016101e060405180830381865afa158015610ac1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ae59190612711565b611509565b90925090506000610afb82846125e9565b90506000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663074b2e436040518163ffffffff1660e01b8152600401602060405180830381865afa158015610b5e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b829190612577565b604051634f843eeb60e11b81526001600160a01b038a811660048301526fffffffffffffffffffffffffffffffff9290921692506000917f00000000000000000000000000000000000000000000000000000000000000001690639f087dd690602401608060405180830381865afa158015610c02573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c269190612514565b50604051634f843eeb60e11b81526001600160a01b038b81166004830152919450600093507f00000000000000000000000000000000000000000000000000000000000000009091169150639f087dd690602401608060405180830381865afa158015610c97573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cbb9190612514565b9350505050600061271080610cd091906125a8565b6001610ce486670de0b6b3a76400006125a8565b610cee91906125a8565b610cf891906125c7565b612710610d0d86670de0b6b3a76400006125a8565b610d1791906125c7565b610d2191906125e9565b612710610d2e84866125e9565b610d4090670de0b6b3a76400006125a8565b610d4a91906125c7565b610d5c90670de0b6b3a7640000612601565b610d669190612601565b90508a6001600160a01b0316896001600160a01b03161415610df457610d8e612710806125a8565b6001610da286670de0b6b3a76400006125a8565b610dac91906125a8565b610db691906125c7565b612710610dcb86670de0b6b3a76400006125a8565b610dd591906125c7565b610ddf91906125e9565b610df190670de0b6b3a7640000612601565b90505b6000198a1015610e1e57670de0b6b3a7640000610e11828c6125a8565b610e1b91906125c7565b94505b858a1115610e495780610e3987670de0b6b3a76400006125a8565b610e4391906125c7565b99508594505b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166342b0b77c308d8d60018e8b604051602001610e9193929190612636565b60405160208183030381529060405260006040518663ffffffff1660e01b8152600401610ec2959493929190612660565b600060405180830381600087803b158015610edc57600080fd5b505af1158015610ef0573d6000803e3d6000fd5b505050505050505050505050505050565b610f09611489565b610f1683838360006115fa565b50505050565b610f24611489565b610f2e6000611757565b565b610f38611489565b600019811415610fad576040516370a0823160e01b81523060048201526001600160a01b038316906370a0823190602401602060405180830381865afa158015610f86573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610faa9190612834565b90505b610fc16001600160a01b03831633836117bf565b5050565b6060815167ffffffffffffffff811115610fe157610fe1612063565b60405190808252806020026020018201604052801561101457816020015b6060815260200190600190039081610fff5790505b50905060005b82518110156110765761104630848381518110611039576110396123d8565b6020026020010151611844565b828281518110611058576110586123d8565b6020026020010181905250808061106e9061284d565b91505061101a565b50919050565b611084611489565b6001546040517fd47eed450000000000000000000000000000000000000000000000000000000081526000916001600160a01b03169063d47eed45906110ce908590600401612363565b602060405180830381865afa1580156110eb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061110f9190612834565b6001546040517fef9e5e280000000000000000000000000000000000000000000000000000000081529192506001600160a01b03169063ef9e5e2890839061115b908690600401612363565b6000604051808303818588803b15801561117457600080fd5b505af1158015611188573d6000803e3d6000fd5b50505050505050565b610fc18282611870565b6111a3611489565b6001600160a01b03811661121f5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f6464726573730000000000000000000000000000000000000000000000000000606482015260840161039b565b61122881611757565b50565b61123d81600001518260a00151611870565b60006112948260800151600081518110611259576112596123d8565b60200260200101518360800151600181518110611278576112786123d8565b602002602001015184602001516119919092919063ffffffff16565b90506112a682606001518260026119a7565b6112bb826060015182846000015160006115fa565b507f3162cef0b20233d1fc54297da632c049f3258a22ac83c3d9726677d82eba5a44306112f06000546001600160a01b031690565b84516060860151602087015160405161133b9594939291906001600160a01b039586168152938516602085015291841660408401529092166060820152608081019190915260a00190565b60405180910390a15050565b61135b81600001518260a001516002611a75565b60006113778260800151600081518110611259576112596123d8565b90508061138983606001518330611b4d565b146113d65760405162461bcd60e51b815260206004820152600f60248201527f5769746864726177206661696c65640000000000000000000000000000000000604482015260640161039b565b81600001516001600160a01b031682606001516001600160a01b03161461140e5761140c826060015182846000015160006115fa565b505b7f0826264388816e5b69166f47873cb6266422a52daeaa594d97183abd12ac55e2306114426000546001600160a01b031690565b6060850151855160405161133b949392919087906001600160a01b039586168152938516602085015291841660408401529092166060820152608081019190915260a00190565b6000546001600160a01b03163314610f2e5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161039b565b60606109d68484846040518060600160405280602981526020016129e960299139611c35565b6101208101516040516370a0823160e01b81526001600160a01b03848116600483015260009283929116906370a0823190602401602060405180830381865afa15801561155a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061157e9190612834565b6101408401516040516370a0823160e01b81526001600160a01b038781166004830152909116906370a0823190602401602060405180830381865afa1580156115cb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115ef9190612834565b915091509250929050565b611602611f44565b600019841415611677576040516370a0823160e01b81523060048201526001600160a01b038616906370a0823190602401602060405180830381865afa158015611650573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116749190612834565b93505b60408051600080825260208201909252816116a2565b606081526020019060019003908161168d5790505b506040517f395fea090000000000000000000000000000000000000000000000000000000081529091506001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063395fea099061171590899089908990899030908990600401612868565b60408051808303816000875af1158015611733573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061062291906128bd565b600080546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa9059cbb0000000000000000000000000000000000000000000000000000000017905261183f908490611d27565b505050565b60606118698383604051806060016040528060278152602001612a1260279139611e0f565b9392505050565b6000198114156118e5576040516370a0823160e01b81523060048201526001600160a01b038316906370a0823190602401602060405180830381865afa1580156118be573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118e29190612834565b90505b6040517f617ba0370000000000000000000000000000000000000000000000000000000081526001600160a01b03838116600483015260248201839052306044830152600060648301527f0000000000000000000000000000000000000000000000000000000000000000169063617ba03790608401600060405180830381600087803b15801561197557600080fd5b505af1158015611989573d6000803e3d6000fd5b505050505050565b60006109d6826119a18686611e7d565b90611e89565b60408051600080825260208201909252816119d2565b60608152602001906001900390816119bd5790505b5090507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316633fa01eab8585856002811115611a1857611a186124ee565b600030876040518763ffffffff1660e01b8152600401611a3d9695949392919061293d565b600060405180830381600087803b158015611a5757600080fd5b505af1158015611a6b573d6000803e3d6000fd5b5050505050505050565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663573ade818484846002811115611ab857611ab86124ee565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e086901b1681526001600160a01b039093166004840152602483019190915260448201523060648201526084016020604051808303816000875af1158015611b29573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f169190612834565b60408051600080825260208201909252819081611b7a565b6060815260200190600190039081611b655790505b506040517fb26a434e0000000000000000000000000000000000000000000000000000000081529091506001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063b26a434e90611be990889088908890879060040161297f565b6020604051808303816000875af1158015611c08573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c2c9190612834565b95945050505050565b606082471015611cad5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c0000000000000000000000000000000000000000000000000000606482015260840161039b565b600080866001600160a01b03168587604051611cc991906129b1565b60006040518083038185875af1925050503d8060008114611d06576040519150601f19603f3d011682016040523d82523d6000602084013e611d0b565b606091505b5091509150611d1c87838387611e95565b979650505050505050565b6000611d7c826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316611f0b9092919063ffffffff16565b9050805160001480611d9d575080806020019051810190611d9d91906129cd565b61183f5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f74207375636365656400000000000000000000000000000000000000000000606482015260840161039b565b6060600080856001600160a01b031685604051611e2c91906129b1565b600060405180830381855af49150503d8060008114611e67576040519150601f19603f3d011682016040523d82523d6000602084013e611e6c565b606091505b509150915061062286838387611e95565b600061186982846125a8565b600061186982846125c7565b60608315611f01578251611efa576001600160a01b0385163b611efa5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161039b565b50816109d6565b6109d68383611f1a565b60606109d68484600085611c35565b815115611f2a5781518083602001fd5b8060405162461bcd60e51b815260040161039b91906121f5565b60405180604001604052806002906020820280368337509192915050565b6001600160a01b038116811461122857600080fd5b60008060008060008060a08789031215611f9057600080fd5b8635611f9b81611f62565b955060208701359450604087013593506060870135611fb981611f62565b9250608087013567ffffffffffffffff80821115611fd657600080fd5b818901915089601f830112611fea57600080fd5b813581811115611ff957600080fd5b8a602082850101111561200b57600080fd5b6020830194508093505050509295509295509295565b60008060006060848603121561203657600080fd5b833561204181611f62565b925060208401359150604084013561205881611f62565b809150509250925092565b634e487b7160e01b600052604160045260246000fd5b6040516101e0810167ffffffffffffffff8111828210171561209d5761209d612063565b60405290565b604051601f8201601f1916810167ffffffffffffffff811182821017156120cc576120cc612063565b604052919050565b600082601f8301126120e557600080fd5b813567ffffffffffffffff8111156120ff576120ff612063565b612112601f8201601f19166020016120a3565b81815284602083860101111561212757600080fd5b816020850160208301376000918101602001919091529392505050565b60008060006060848603121561215957600080fd5b833561216481611f62565b9250602084013567ffffffffffffffff81111561218057600080fd5b61218c868287016120d4565b925050604084013590509250925092565b60005b838110156121b85781810151838201526020016121a0565b83811115610f165750506000910152565b600081518084526121e181602086016020860161219d565b601f01601f19169290920160200192915050565b60208152600061186960208301846121c9565b6000806040838503121561221b57600080fd5b823561222681611f62565b946020939093013593505050565b600067ffffffffffffffff82111561224e5761224e612063565b5060051b60200190565b6000602080838503121561226b57600080fd5b823567ffffffffffffffff8082111561228357600080fd5b818501915085601f83011261229757600080fd5b81356122aa6122a582612234565b6120a3565b81815260059190911b830184019084810190888311156122c957600080fd5b8585015b83811015612301578035858111156122e55760008081fd5b6122f38b89838a01016120d4565b8452509186019186016122cd565b5098975050505050505050565b600081518084526020808501808196508360051b8101915082860160005b858110156123565782840389526123448483516121c9565b9885019893509084019060010161232c565b5091979650505050505050565b602081526000611869602083018461230e565b60006020828403121561238857600080fd5b813561186981611f62565b6000806000606084860312156123a857600080fd5b8335600281106123b757600080fd5b925060208401356123c781611f62565b929592945050506040919091013590565b634e487b7160e01b600052603260045260246000fd5b80516123f981611f62565b919050565b60006020828403121561241057600080fd5b815161186981611f62565b6020808252825182820181905260009190848201906040850190845b8181101561245c5783516001600160a01b031683529284019291840191600101612437565b50909695505050505050565b6000602080838503121561247b57600080fd5b825167ffffffffffffffff81111561249257600080fd5b8301601f810185136124a357600080fd5b80516124b16122a582612234565b81815260059190911b820183019083810190878311156124d057600080fd5b928401925b82841015611d1c578351825292840192908401906124d5565b634e487b7160e01b600052602160045260246000fd5b805180151581146123f957600080fd5b6000806000806080858703121561252a57600080fd5b61253385612504565b935061254160208601612504565b6040860151606090960151949790965092505050565b80516fffffffffffffffffffffffffffffffff811681146123f957600080fd5b60006020828403121561258957600080fd5b61186982612557565b634e487b7160e01b600052601160045260246000fd5b60008160001904831182151516156125c2576125c2612592565b500290565b6000826125e457634e487b7160e01b600052601260045260246000fd5b500490565b600082198211156125fc576125fc612592565b500190565b60008282101561261357612613612592565b500390565b6002811061122857634e487b7160e01b600052602160045260246000fd5b6060810161264385612618565b9381526001600160a01b0392909216602083015260409091015290565b60006001600160a01b03808816835280871660208401525084604083015260a0606083015261269260a08301856121c9565b905061ffff831660808301529695505050505050565b6000602082840312156126ba57600080fd5b6040516020810181811067ffffffffffffffff821117156126dd576126dd612063565b6040529151825250919050565b805164ffffffffff811681146123f957600080fd5b805161ffff811681146123f957600080fd5b60006101e0828403121561272457600080fd5b61272c612079565b61273684846126a8565b815261274460208401612557565b602082015261275560408401612557565b604082015261276660608401612557565b606082015261277760808401612557565b608082015261278860a08401612557565b60a082015261279960c084016126ea565b60c08201526127aa60e084016126ff565b60e08201526101006127bd8185016123ee565b908201526101206127cf8482016123ee565b908201526101406127e18482016123ee565b908201526101606127f38482016123ee565b90820152610180612805848201612557565b908201526101a0612817848201612557565b908201526101c0612829848201612557565b908201529392505050565b60006020828403121561284657600080fd5b5051919050565b600060001982141561286157612861612592565b5060010190565b60006001600160a01b038089168352876020840152808716604084015261288e86612618565b85606084015280851660808401525060c060a08301526128b160c083018461230e565b98975050505050505050565b6000604082840312156128cf57600080fd5b82601f8301126128de57600080fd5b6040516040810181811067ffffffffffffffff8211171561290157612901612063565b806040525080604084018581111561291857600080fd5b845b8181101561293257805183526020928301920161291a565b509195945050505050565b60006001600160a01b03808916835287602084015286604084015261ffff8616606084015280851660808401525060c060a08301526128b160c083018461230e565b60006001600160a01b03808716835285602084015280851660408401525060806060830152610622608083018461230e565b600082516129c381846020870161219d565b9190910192915050565b6000602082840312156129df57600080fd5b6118698261250456fe416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a26469706673582212208af5d8520bb0da7d8c1a8b5253347081087aeda247eb6d2f2171bc76b2117dfb64736f6c634300080a0033";

type PerpPositionConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PerpPositionConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PerpPosition__factory extends ContractFactory {
  constructor(...args: PerpPositionConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    poolAddressesProvider: PromiseOrValue<string>,
    synthPool: PromiseOrValue<string>,
    _pyth: PromiseOrValue<string>,
    overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
  ): Promise<PerpPosition> {
    return super.deploy(
      poolAddressesProvider,
      synthPool,
      _pyth,
      overrides || {}
    ) as Promise<PerpPosition>;
  }
  override getDeployTransaction(
    poolAddressesProvider: PromiseOrValue<string>,
    synthPool: PromiseOrValue<string>,
    _pyth: PromiseOrValue<string>,
    overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      poolAddressesProvider,
      synthPool,
      _pyth,
      overrides || {}
    );
  }
  override attach(address: string): PerpPosition {
    return super.attach(address) as PerpPosition;
  }
  override connect(signer: Signer): PerpPosition__factory {
    return super.connect(signer) as PerpPosition__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PerpPositionInterface {
    return new utils.Interface(_abi) as PerpPositionInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PerpPosition {
    return new Contract(address, _abi, signerOrProvider) as PerpPosition;
  }
}
