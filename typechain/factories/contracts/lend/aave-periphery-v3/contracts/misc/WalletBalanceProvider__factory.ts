/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../../common";
import type {
  WalletBalanceProvider,
  WalletBalanceProviderInterface,
} from "../../../../../../contracts/lend/aave-periphery-v3/contracts/misc/WalletBalanceProvider";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "users",
        type: "address[]",
      },
      {
        internalType: "address[]",
        name: "tokens",
        type: "address[]",
      },
    ],
    name: "batchBalanceOf",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "provider",
        type: "address",
      },
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getUserWalletBalances",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610b86806100206000396000f3fe6080604052600436106100385760003560e01c8063024053431461009e578063b59b28ef146100d5578063f7888aec1461010257600080fd5b366100995761004633610130565b6100975760405162461bcd60e51b815260206004820152600260248201527f323200000000000000000000000000000000000000000000000000000000000060448201526064015b60405180910390fd5b005b600080fd5b3480156100aa57600080fd5b506100be6100b93660046107a5565b61016c565b6040516100cc929190610819565b60405180910390f35b3480156100e157600080fd5b506100f56100f03660046108be565b61054d565b6040516100cc919061092a565b34801561010e57600080fd5b5061012261011d3660046107a5565b610666565b6040519081526020016100cc565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47081811480159061016457508115155b949350505050565b6060806000846001600160a01b031663026b1d5f6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156101af573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101d39190610944565b90506000816001600160a01b031663d1946dbc6040518163ffffffff1660e01b8152600401600060405180830381865afa158015610215573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261023d91908101906109a8565b905060008151600161024f9190610a70565b67ffffffffffffffff81111561026757610267610961565b604051908082528060200260200182016040528015610290578160200160208202803683370190505b50905060005b82518110156102f5578281815181106102b1576102b1610a88565b60200260200101518282815181106102cb576102cb610a88565b6001600160a01b0390921660209283029190910190910152806102ed81610a9e565b915050610296565b5073eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee8183518151811061031e5761031e610a88565b60200260200101906001600160a01b031690816001600160a01b0316815250506000815167ffffffffffffffff81111561035a5761035a610961565b604051908082528060200260200182016040528015610383578160200160208202803683370190505b50905060005b8351811015610501576000856001600160a01b031663c44b11f78584815181106103b5576103b5610a88565b60200260200101516040518263ffffffff1660e01b81526004016103e891906001600160a01b0391909116815260200190565b602060405180830381865afa158015610405573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104299190610ab9565b905060006104798251670100000000000000811615159167020000000000000082161515916704000000000000008116151591670800000000000000821615159167100000000000000016151590565b505050509050806104ab57600084848151811061049857610498610a88565b60200260200101818152505050506104ef565b6104ce8a8685815181106104c1576104c1610a88565b6020026020010151610666565b8484815181106104e0576104e0610a88565b60200260200101818152505050505b806104f981610a9e565b915050610389565b506105208773eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee610666565b8184518151811061053357610533610a88565b6020908102919091010152909450925050505b9250929050565b6060600061055b8386610afb565b67ffffffffffffffff81111561057357610573610961565b60405190808252806020026020018201604052801561059c578160200160208202803683370190505b50905060005b8581101561065c5760005b84811015610649576106068888848181106105ca576105ca610a88565b90506020020160208101906105df9190610b1a565b8787848181106105f1576105f1610a88565b905060200201602081019061011d9190610b1a565b83826106128886610afb565b61061c9190610a70565b8151811061062c5761062c610a88565b60209081029190910101528061064181610a9e565b9150506105ad565b508061065481610a9e565b9150506105a2565b5095945050505050565b60006001600160a01b03821673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee141561069e57506001600160a01b03821631610787565b6106b0826001600160a01b0316610130565b1561073f576040517f70a082310000000000000000000000000000000000000000000000000000000081526001600160a01b0384811660048301528316906370a0823190602401602060405180830381865afa158015610714573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107389190610b37565b9050610787565b60405162461bcd60e51b815260206004820152600d60248201527f494e56414c49445f544f4b454e00000000000000000000000000000000000000604482015260640161008e565b92915050565b6001600160a01b03811681146107a257600080fd5b50565b600080604083850312156107b857600080fd5b82356107c38161078d565b915060208301356107d38161078d565b809150509250929050565b600081518084526020808501945080840160005b8381101561080e578151875295820195908201906001016107f2565b509495945050505050565b604080825283519082018190526000906020906060840190828701845b8281101561085b5781516001600160a01b031684529284019290840190600101610836565b5050508381038285015261086f81866107de565b9695505050505050565b60008083601f84011261088b57600080fd5b50813567ffffffffffffffff8111156108a357600080fd5b6020830191508360208260051b850101111561054657600080fd5b600080600080604085870312156108d457600080fd5b843567ffffffffffffffff808211156108ec57600080fd5b6108f888838901610879565b9096509450602087013591508082111561091157600080fd5b5061091e87828801610879565b95989497509550505050565b60208152600061093d60208301846107de565b9392505050565b60006020828403121561095657600080fd5b815161093d8161078d565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156109a0576109a0610961565b604052919050565b600060208083850312156109bb57600080fd5b825167ffffffffffffffff808211156109d357600080fd5b818501915085601f8301126109e757600080fd5b8151818111156109f9576109f9610961565b8060051b9150610a0a848301610977565b8181529183018401918481019088841115610a2457600080fd5b938501935b83851015610a4e5784519250610a3e8361078d565b8282529385019390850190610a29565b98975050505050505050565b634e487b7160e01b600052601160045260246000fd5b60008219821115610a8357610a83610a5a565b500190565b634e487b7160e01b600052603260045260246000fd5b6000600019821415610ab257610ab2610a5a565b5060010190565b600060208284031215610acb57600080fd5b6040516020810181811067ffffffffffffffff82111715610aee57610aee610961565b6040529151825250919050565b6000816000190483118215151615610b1557610b15610a5a565b500290565b600060208284031215610b2c57600080fd5b813561093d8161078d565b600060208284031215610b4957600080fd5b505191905056fea26469706673582212206315375109cf3b1278f16855628dd6efbe90c6ac8cbe3763668150453b43209564736f6c634300080a0033";

type WalletBalanceProviderConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: WalletBalanceProviderConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class WalletBalanceProvider__factory extends ContractFactory {
  constructor(...args: WalletBalanceProviderConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<WalletBalanceProvider> {
    return super.deploy(overrides || {}) as Promise<WalletBalanceProvider>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): WalletBalanceProvider {
    return super.attach(address) as WalletBalanceProvider;
  }
  override connect(signer: Signer): WalletBalanceProvider__factory {
    return super.connect(signer) as WalletBalanceProvider__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): WalletBalanceProviderInterface {
    return new utils.Interface(_abi) as WalletBalanceProviderInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): WalletBalanceProvider {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as WalletBalanceProvider;
  }
}
