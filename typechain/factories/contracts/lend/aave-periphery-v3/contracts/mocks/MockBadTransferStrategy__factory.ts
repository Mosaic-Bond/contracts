/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../../common";
import type {
  MockBadTransferStrategy,
  MockBadTransferStrategyInterface,
} from "../../../../../../contracts/lend/aave-periphery-v3/contracts/mocks/MockBadTransferStrategy";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "incentivesController",
        type: "address",
      },
      {
        internalType: "address",
        name: "rewardsAdmin",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "caller",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "EmergencyWithdrawal",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "emergencyWithdrawal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getIncentivesController",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRewardsAdmin",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "performTransfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60c060405234801561001057600080fd5b5060405161051b38038061051b83398101604081905261002f91610062565b6001600160a01b039182166080521660a052610095565b80516001600160a01b038116811461005d57600080fd5b919050565b6000806040838503121561007557600080fd5b61007e83610046565b915061008c60208401610046565b90509250929050565b60805160a0516104566100c56000396000818160ca0152610187015260008181607b015260f201526104566000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806316beb9821461005157806375d26413146100795780638d8e5da7146100b3578063c6255443146100c8575b600080fd5b61006461005f3660046103e4565b6100ee565b60405190151581526020015b60405180910390f35b7f00000000000000000000000000000000000000000000000000000000000000005b6040516001600160a01b039091168152602001610070565b6100c66100c13660046103e4565b61017c565b005b7f000000000000000000000000000000000000000000000000000000000000000061009b565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316331461016d5760405162461bcd60e51b815260206004820181905260248201527f43414c4c45525f4e4f545f494e43454e54495645535f434f4e54524f4c4c455260448201526064015b60405180910390fd5b50600160009081559392505050565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146101f45760405162461bcd60e51b815260206004820152601260248201527f4f4e4c595f524557415244535f41444d494e00000000000000000000000000006044820152606401610164565b6102086001600160a01b0384168383610264565b816001600160a01b0316836001600160a01b0316336001600160a01b03167f7dc4ea712e6400e67a5abca1a983e5c420c386c19936dc120cd860b50b8e25798460405161025791815260200190565b60405180910390a4505050565b6040517fa9059cbb000000000000000000000000000000000000000000000000000000008082526001600160a01b0384166004830152602482018390529060008060448382895af16102ba573d6000803e3d6000fd5b506102c484610316565b6103105760405162461bcd60e51b815260206004820152601560248201527f475076323a206661696c6564207472616e7366657200000000000000000000006044820152606401610164565b50505050565b600061033c565b62461bcd60e51b60005260206004528060245250806044525060646000fd5b3d801561037b57602081146103b5576103767f475076323a206d616c666f726d6564207472616e7366657220726573756c7400601f61031d565b6103c2565b823b6103ac576103ac7f475076323a206e6f74206120636f6e7472616374000000000000000000000000601461031d565b600191506103c2565b3d6000803e600051151591505b50919050565b80356001600160a01b03811681146103df57600080fd5b919050565b6000806000606084860312156103f957600080fd5b610402846103c8565b9250610410602085016103c8565b915060408401359050925092509256fea26469706673582212203238fae2e4f4db5e2969d2a1265f5f50e65f7616d0da6611a9f11cc3c1874b7f64736f6c634300080a0033";

type MockBadTransferStrategyConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockBadTransferStrategyConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockBadTransferStrategy__factory extends ContractFactory {
  constructor(...args: MockBadTransferStrategyConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    incentivesController: PromiseOrValue<string>,
    rewardsAdmin: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MockBadTransferStrategy> {
    return super.deploy(
      incentivesController,
      rewardsAdmin,
      overrides || {}
    ) as Promise<MockBadTransferStrategy>;
  }
  override getDeployTransaction(
    incentivesController: PromiseOrValue<string>,
    rewardsAdmin: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      incentivesController,
      rewardsAdmin,
      overrides || {}
    );
  }
  override attach(address: string): MockBadTransferStrategy {
    return super.attach(address) as MockBadTransferStrategy;
  }
  override connect(signer: Signer): MockBadTransferStrategy__factory {
    return super.connect(signer) as MockBadTransferStrategy__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockBadTransferStrategyInterface {
    return new utils.Interface(_abi) as MockBadTransferStrategyInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockBadTransferStrategy {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as MockBadTransferStrategy;
  }
}
