/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../../../common";
import type {
  PullRewardsTransferStrategy,
  PullRewardsTransferStrategyInterface,
} from "../../../../../../../contracts/lend/aave-periphery-v3/contracts/rewards/transfer-strategies/PullRewardsTransferStrategy";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "incentivesController",
        type: "address",
      },
      {
        internalType: "address",
        name: "rewardsAdmin",
        type: "address",
      },
      {
        internalType: "address",
        name: "rewardsVault",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "caller",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "EmergencyWithdrawal",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "emergencyWithdrawal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getIncentivesController",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRewardsAdmin",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRewardsVault",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "address",
        name: "reward",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "performTransfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60e060405234801561001057600080fd5b5060405161066f38038061066f83398101604081905261002f91610068565b6001600160a01b0392831660805290821660a0521660c0526100ab565b80516001600160a01b038116811461006357600080fd5b919050565b60008060006060848603121561007d57600080fd5b6100868461004c565b92506100946020850161004c565b91506100a26040850161004c565b90509250925092565b60805160a05160c0516105826100ed6000396000818161010b01526101bd01526000818160e501526101f80152600081816096015261013301526105826000f3fe608060405234801561001057600080fd5b50600436106100675760003560e01c80638d8e5da7116100505780638d8e5da7146100ce578063c6255443146100e3578063e23ddec51461010957600080fd5b806316beb9821461006c57806375d2641314610094575b600080fd5b61007f61007a366004610510565b61012f565b60405190151581526020015b60405180910390f35b7f00000000000000000000000000000000000000000000000000000000000000005b6040516001600160a01b03909116815260200161008b565b6100e16100dc366004610510565b6101ed565b005b7f00000000000000000000000000000000000000000000000000000000000000006100b6565b7f00000000000000000000000000000000000000000000000000000000000000006100b6565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031633146101ae5760405162461bcd60e51b815260206004820181905260248201527f43414c4c45525f4e4f545f494e43454e54495645535f434f4e54524f4c4c455260448201526064015b60405180910390fd5b6101e36001600160a01b0384167f000000000000000000000000000000000000000000000000000000000000000086856102d5565b5060019392505050565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146102655760405162461bcd60e51b815260206004820152601260248201527f4f4e4c595f524557415244535f41444d494e000000000000000000000000000060448201526064016101a5565b6102796001600160a01b0384168383610390565b816001600160a01b0316836001600160a01b0316336001600160a01b03167f7dc4ea712e6400e67a5abca1a983e5c420c386c19936dc120cd860b50b8e2579846040516102c891815260200190565b60405180910390a4505050565b6040517f23b872dd000000000000000000000000000000000000000000000000000000008082526001600160a01b038581166004840152841660248301526044820183905290600080606483828a5af1610333573d6000803e3d6000fd5b5061033d85610442565b6103895760405162461bcd60e51b815260206004820152601960248201527f475076323a206661696c6564207472616e7366657246726f6d0000000000000060448201526064016101a5565b5050505050565b6040517fa9059cbb000000000000000000000000000000000000000000000000000000008082526001600160a01b0384166004830152602482018390529060008060448382895af16103e6573d6000803e3d6000fd5b506103f084610442565b61043c5760405162461bcd60e51b815260206004820152601560248201527f475076323a206661696c6564207472616e73666572000000000000000000000060448201526064016101a5565b50505050565b6000610468565b62461bcd60e51b60005260206004528060245250806044525060646000fd5b3d80156104a757602081146104e1576104a27f475076323a206d616c666f726d6564207472616e7366657220726573756c7400601f610449565b6104ee565b823b6104d8576104d87f475076323a206e6f74206120636f6e74726163740000000000000000000000006014610449565b600191506104ee565b3d6000803e600051151591505b50919050565b80356001600160a01b038116811461050b57600080fd5b919050565b60008060006060848603121561052557600080fd5b61052e846104f4565b925061053c602085016104f4565b915060408401359050925092509256fea2646970667358221220814e5a8ec9bf151c954c93299a20a1ee0c2582bc5736e1f3b9b1760f97a7b81864736f6c634300080a0033";

type PullRewardsTransferStrategyConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PullRewardsTransferStrategyConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PullRewardsTransferStrategy__factory extends ContractFactory {
  constructor(...args: PullRewardsTransferStrategyConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    incentivesController: PromiseOrValue<string>,
    rewardsAdmin: PromiseOrValue<string>,
    rewardsVault: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<PullRewardsTransferStrategy> {
    return super.deploy(
      incentivesController,
      rewardsAdmin,
      rewardsVault,
      overrides || {}
    ) as Promise<PullRewardsTransferStrategy>;
  }
  override getDeployTransaction(
    incentivesController: PromiseOrValue<string>,
    rewardsAdmin: PromiseOrValue<string>,
    rewardsVault: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      incentivesController,
      rewardsAdmin,
      rewardsVault,
      overrides || {}
    );
  }
  override attach(address: string): PullRewardsTransferStrategy {
    return super.attach(address) as PullRewardsTransferStrategy;
  }
  override connect(signer: Signer): PullRewardsTransferStrategy__factory {
    return super.connect(signer) as PullRewardsTransferStrategy__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PullRewardsTransferStrategyInterface {
    return new utils.Interface(_abi) as PullRewardsTransferStrategyInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PullRewardsTransferStrategy {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as PullRewardsTransferStrategy;
  }
}
