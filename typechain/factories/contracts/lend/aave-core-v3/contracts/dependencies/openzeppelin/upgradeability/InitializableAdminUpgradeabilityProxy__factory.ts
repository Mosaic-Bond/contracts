/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../../../../common";
import type {
  InitializableAdminUpgradeabilityProxy,
  InitializableAdminUpgradeabilityProxyInterface,
} from "../../../../../../../../contracts/lend/aave-core-v3/contracts/dependencies/openzeppelin/upgradeability/InitializableAdminUpgradeabilityProxy";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousAdmin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "AdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [],
    name: "admin",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "changeAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "implementation",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "logic",
        type: "address",
      },
      {
        internalType: "address",
        name: "admin",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_logic",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
    ],
    name: "upgradeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610a9f806100206000396000f3fe6080604052600436106100705760003560e01c80638f2839701161004e5780638f283970146100de578063cf7a1d77146100fe578063d1f5789414610111578063f851a4401461012457610070565b80633659cfe61461007a5780634f1ef2861461009a5780635c60da1b146100ad575b610078610139565b005b34801561008657600080fd5b506100786100953660046107cf565b610173565b6100786100a83660046107f1565b6101b0565b3480156100b957600080fd5b506100c261025f565b6040516001600160a01b03909116815260200160405180910390f35b3480156100ea57600080fd5b506100786100f93660046107cf565b6102c1565b61007861010c366004610917565b6103da565b61007861011f366004610975565b61047e565b34801561013057600080fd5b506100c2610590565b6101416105d5565b61017161016c7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5490565b6105dd565b565b600080516020610a4a833981519152546001600160a01b0316336001600160a01b031614156101a8576101a581610601565b50565b6101a5610139565b600080516020610a4a833981519152546001600160a01b0316336001600160a01b03161415610252576101e283610601565b6000836001600160a01b031683836040516101fe9291906109c3565b600060405180830381855af49150503d8060008114610239576040519150601f19603f3d011682016040523d82523d6000602084013e61023e565b606091505b505090508061024c57600080fd5b50505050565b61025a610139565b505050565b6000610277600080516020610a4a8339815191525490565b6001600160a01b0316336001600160a01b031614156102b657507f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5490565b6102be610139565b90565b600080516020610a4a833981519152546001600160a01b0316336001600160a01b031614156101a8576001600160a01b03811661036b5760405162461bcd60e51b815260206004820152603660248201527f43616e6e6f74206368616e6765207468652061646d696e206f6620612070726f60448201527f787920746f20746865207a65726f20616464726573730000000000000000000060648201526084015b60405180910390fd5b7f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f6103a2600080516020610a4a8339815191525490565b604080516001600160a01b03928316815291841660208301520160405180910390a16101a581600080516020610a4a83398151915255565b60006104047f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5490565b6001600160a01b03161461041757600080fd5b610421838261047e565b61044c60017fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61046109d3565b600080516020610a4a83398151915214610468576104686109f8565b61025a82600080516020610a4a83398151915255565b60006104a87f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5490565b6001600160a01b0316146104bb57600080fd5b6104e660017f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbd6109d3565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc14610514576105146109f8565b61051d82610641565b80511561058c576000826001600160a01b03168260405161053e9190610a0e565b600060405180830381855af49150503d8060008114610579576040519150601f19603f3d011682016040523d82523d6000602084013e61057e565b606091505b505090508061025a57600080fd5b5050565b60006105a8600080516020610a4a8339815191525490565b6001600160a01b0316336001600160a01b031614156102b65750600080516020610a4a8339815191525490565b6101716106e0565b3660008037600080366000845af43d6000803e8080156105fc573d6000f35b3d6000fd5b61060a81610641565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b61064a81610777565b6106bc5760405162461bcd60e51b815260206004820152603b60248201527f43616e6e6f742073657420612070726f787920696d706c656d656e746174696f60448201527f6e20746f2061206e6f6e2d636f6e7472616374206164647265737300000000006064820152608401610362565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc55565b600080516020610a4a833981519152546001600160a01b0316336001600160a01b031614156101715760405162461bcd60e51b815260206004820152603260248201527f43616e6e6f742063616c6c2066616c6c6261636b2066756e6374696f6e20667260448201527f6f6d207468652070726f78792061646d696e00000000000000000000000000006064820152608401610362565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a4708181148015906107ab57508115155b949350505050565b80356001600160a01b03811681146107ca57600080fd5b919050565b6000602082840312156107e157600080fd5b6107ea826107b3565b9392505050565b60008060006040848603121561080657600080fd5b61080f846107b3565b9250602084013567ffffffffffffffff8082111561082c57600080fd5b818601915086601f83011261084057600080fd5b81358181111561084f57600080fd5b87602082850101111561086157600080fd5b6020830194508093505050509250925092565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261089b57600080fd5b813567ffffffffffffffff808211156108b6576108b6610874565b604051601f8301601f19908116603f011681019082821181831017156108de576108de610874565b816040528381528660208588010111156108f757600080fd5b836020870160208301376000602085830101528094505050505092915050565b60008060006060848603121561092c57600080fd5b610935846107b3565b9250610943602085016107b3565b9150604084013567ffffffffffffffff81111561095f57600080fd5b61096b8682870161088a565b9150509250925092565b6000806040838503121561098857600080fd5b610991836107b3565b9150602083013567ffffffffffffffff8111156109ad57600080fd5b6109b98582860161088a565b9150509250929050565b8183823760009101908152919050565b6000828210156109f357634e487b7160e01b600052601160045260246000fd5b500390565b634e487b7160e01b600052600160045260246000fd5b6000825160005b81811015610a2f5760208186018101518583015201610a15565b81811115610a3e576000828501525b50919091019291505056feb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103a26469706673582212203fb444f39eea709ec4e35f18990c97ad49dcfd0a253922fcc6def7e9f4ad9c0b64736f6c634300080a0033";

type InitializableAdminUpgradeabilityProxyConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: InitializableAdminUpgradeabilityProxyConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class InitializableAdminUpgradeabilityProxy__factory extends ContractFactory {
  constructor(...args: InitializableAdminUpgradeabilityProxyConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<InitializableAdminUpgradeabilityProxy> {
    return super.deploy(
      overrides || {}
    ) as Promise<InitializableAdminUpgradeabilityProxy>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): InitializableAdminUpgradeabilityProxy {
    return super.attach(address) as InitializableAdminUpgradeabilityProxy;
  }
  override connect(
    signer: Signer
  ): InitializableAdminUpgradeabilityProxy__factory {
    return super.connect(
      signer
    ) as InitializableAdminUpgradeabilityProxy__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): InitializableAdminUpgradeabilityProxyInterface {
    return new utils.Interface(
      _abi
    ) as InitializableAdminUpgradeabilityProxyInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): InitializableAdminUpgradeabilityProxy {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as InitializableAdminUpgradeabilityProxy;
  }
}
