/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../../../common";
import type {
  FlashloanAttacker,
  FlashloanAttackerInterface,
} from "../../../../../../../contracts/lend/aave-core-v3/contracts/mocks/tests/FlashloanAttacker";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IPoolAddressesProvider",
        name: "provider",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ADDRESSES_PROVIDER",
    outputs: [
      {
        internalType: "contract IPoolAddressesProvider",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "POOL",
    outputs: [
      {
        internalType: "contract IPool",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "premium",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "executeOperation",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "supplyAsset",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60c060405234801561001057600080fd5b50604051610bd5380380610bd583398101604081905261002f91610166565b80806001600160a01b03166080816001600160a01b031681525050806001600160a01b031663026b1d5f6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610088573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100ac9190610166565b6001600160a01b031660a0816001600160a01b03168152505050806001600160a01b031663026b1d5f6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610104573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101289190610166565b600180546001600160a01b0319166001600160a01b03929092169190911790555061018a565b6001600160a01b038116811461016357600080fd5b50565b60006020828403121561017857600080fd5b81516101838161014e565b9392505050565b60805160a051610a216101b46000396000818160d201526103360152600060560152610a216000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80630542975c146100515780631416d762146100955780631b11d0ff146100aa5780637535d246146100cd575b600080fd5b6100787f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b6100a86100a3366004610598565b6100f4565b005b6100bd6100b836600461064e565b61026c565b604051901515815260200161008c565b6100787f000000000000000000000000000000000000000000000000000000000000000081565b60405163140e25ad60e31b81526004810182905282906001600160a01b0382169063a0712d68906024016020604051808303816000875af115801561013d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610161919061071c565b5060015460405163095ea7b360e01b81526001600160a01b03918216600482015260001960248201529082169063095ea7b3906044016020604051808303816000875af11580156101b6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101da919061071c565b506001546040517f617ba0370000000000000000000000000000000000000000000000000000000081526001600160a01b03858116600483015260248201859052306044830152600060648301529091169063617ba03790608401600060405180830381600087803b15801561024f57600080fd5b505af1158015610263573d6000803e3d6000fd5b50505050505050565b6000858161027a87876103c1565b604080516000808252602082019092529192506102b3918a916102ad565b60608152602001906001900390816102985790505b506103d7565b60405163140e25ad60e31b8152600481018790526001600160a01b0383169063a0712d68906024016020604051808303816000875af11580156102fa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061031e919061071c565b5060405163095ea7b360e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811660048301526024820183905289169063095ea7b3906044016020604051808303816000875af115801561038e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103b2919061071c565b50600198975050505050505050565b808201828110156103d157600080fd5b92915050565b6001546040517f35ea6a750000000000000000000000000000000000000000000000000000000081526001600160a01b03848116600483015260009216906335ea6a75906024016101e060405180830381865afa15801561043c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061046091906107de565b6101008101516040517f70a082310000000000000000000000000000000000000000000000000000000081526001600160a01b03918216600482015291925084916000918316906370a0823190602401602060405180830381865afa1580156104cd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104f19190610901565b6001546040517f3fa01eab0000000000000000000000000000000000000000000000000000000081529192506001600160a01b031690633fa01eab90610547908890859060029060009030908c9060040161091a565b600060405180830381600087803b15801561056157600080fd5b505af1158015610575573d6000803e3d6000fd5b505050505050505050565b6001600160a01b038116811461059557600080fd5b50565b600080604083850312156105ab57600080fd5b82356105b681610580565b946020939093013593505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040516101e0810167ffffffffffffffff81118282101715610617576106176105c4565b60405290565b604051601f8201601f1916810167ffffffffffffffff81118282101715610646576106466105c4565b604052919050565b600080600080600060a0868803121561066657600080fd5b853561067181610580565b9450602086810135945060408701359350606087013561069081610580565b9250608087013567ffffffffffffffff808211156106ad57600080fd5b818901915089601f8301126106c157600080fd5b8135818111156106d3576106d36105c4565b6106e5601f8201601f1916850161061d565b91508082528a848285010111156106fb57600080fd5b80848401858401376000848284010152508093505050509295509295909350565b60006020828403121561072e57600080fd5b8151801515811461073e57600080fd5b9392505050565b60006020828403121561075757600080fd5b6040516020810181811067ffffffffffffffff8211171561077a5761077a6105c4565b6040529151825250919050565b80516fffffffffffffffffffffffffffffffff811681146107a757600080fd5b919050565b805164ffffffffff811681146107a757600080fd5b805161ffff811681146107a757600080fd5b80516107a781610580565b60006101e082840312156107f157600080fd5b6107f96105f3565b6108038484610745565b815261081160208401610787565b602082015261082260408401610787565b604082015261083360608401610787565b606082015261084460808401610787565b608082015261085560a08401610787565b60a082015261086660c084016107ac565b60c082015261087760e084016107c1565b60e082015261010061088a8185016107d3565b9082015261012061089c8482016107d3565b908201526101406108ae8482016107d3565b908201526101606108c08482016107d3565b908201526101806108d2848201610787565b908201526101a06108e4848201610787565b908201526101c06108f6848201610787565b908201529392505050565b60006020828403121561091357600080fd5b5051919050565b600060c082016001600160a01b03808a1684526020898186015288604086015261ffff88166060860152818716608086015260c060a0860152829150855180845260e08601925060e08160051b87010193508187016000805b838110156109d85788870360df1901865282518051808952835b818110156109a8578281018801518a8201890152870161098d565b818111156109b8578488838c0101525b50601f01601f191697909701850196509484019491840191600101610973565b50949d9c5050505050505050505050505056fea264697066735822122081383bd5b17e55480045fd8b193d1ca8259905b0ee1e5cfd90b8a27e01bbea0464736f6c634300080a0033";

type FlashloanAttackerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FlashloanAttackerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FlashloanAttacker__factory extends ContractFactory {
  constructor(...args: FlashloanAttackerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    provider: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<FlashloanAttacker> {
    return super.deploy(
      provider,
      overrides || {}
    ) as Promise<FlashloanAttacker>;
  }
  override getDeployTransaction(
    provider: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(provider, overrides || {});
  }
  override attach(address: string): FlashloanAttacker {
    return super.attach(address) as FlashloanAttacker;
  }
  override connect(signer: Signer): FlashloanAttacker__factory {
    return super.connect(signer) as FlashloanAttacker__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FlashloanAttackerInterface {
    return new utils.Interface(_abi) as FlashloanAttackerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): FlashloanAttacker {
    return new Contract(address, _abi, signerOrProvider) as FlashloanAttacker;
  }
}
