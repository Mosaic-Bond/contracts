/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../../../../common";
import type {
  MockPeripheryContractV1,
  MockPeripheryContractV1Interface,
} from "../../../../../../../../contracts/lend/aave-core-v3/contracts/mocks/helpers/MockPeripheryContract.sol/MockPeripheryContractV1";

const _abi = [
  {
    inputs: [],
    name: "getManager",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "manager",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newManager",
        type: "address",
      },
    ],
    name: "setManager",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506101b7806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063cd6dc68714610046578063d0ebdbe714610096578063d5009584146100e0575b600080fd5b610094610054366004610135565b6000805473ffffffffffffffffffffffffffffffffffffffff191673ffffffffffffffffffffffffffffffffffffffff9390931692909217909155600155565b005b6100946100a436600461015f565b6000805473ffffffffffffffffffffffffffffffffffffffff191673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b6000546040805173ffffffffffffffffffffffffffffffffffffffff9092168252519081900360200190f35b803573ffffffffffffffffffffffffffffffffffffffff8116811461013057600080fd5b919050565b6000806040838503121561014857600080fd5b6101518361010c565b946020939093013593505050565b60006020828403121561017157600080fd5b61017a8261010c565b939250505056fea2646970667358221220746af8df131539285e358772f73547e8e4e93c8712131ae3963146ca82895a7164736f6c634300080a0033";

type MockPeripheryContractV1ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockPeripheryContractV1ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockPeripheryContractV1__factory extends ContractFactory {
  constructor(...args: MockPeripheryContractV1ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MockPeripheryContractV1> {
    return super.deploy(overrides || {}) as Promise<MockPeripheryContractV1>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): MockPeripheryContractV1 {
    return super.attach(address) as MockPeripheryContractV1;
  }
  override connect(signer: Signer): MockPeripheryContractV1__factory {
    return super.connect(signer) as MockPeripheryContractV1__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockPeripheryContractV1Interface {
    return new utils.Interface(_abi) as MockPeripheryContractV1Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockPeripheryContractV1 {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as MockPeripheryContractV1;
  }
}
