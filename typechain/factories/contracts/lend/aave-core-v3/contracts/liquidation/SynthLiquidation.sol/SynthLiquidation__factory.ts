/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../../../common";
import type {
  SynthLiquidation,
  SynthLiquidationInterface,
} from "../../../../../../../contracts/lend/aave-core-v3/contracts/liquidation/SynthLiquidation.sol/SynthLiquidation";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_router",
        type: "address",
      },
      {
        internalType: "address",
        name: "_synthPool",
        type: "address",
      },
      {
        internalType: "address",
        name: "_addressProvider",
        type: "address",
      },
      {
        internalType: "address",
        name: "_admin",
        type: "address",
      },
      {
        internalType: "address",
        name: "_liquidator",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "previousAdminRole",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "newAdminRole",
        type: "bytes32",
      },
    ],
    name: "RoleAdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleGranted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleRevoked",
    type: "event",
  },
  {
    inputs: [],
    name: "ADDRESSES_PROVIDER",
    outputs: [
      {
        internalType: "contract IPoolAddressesProvider",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DEFAULT_ADMIN_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "LIQUIDATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "POOL",
    outputs: [
      {
        internalType: "contract IPool",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "assetAddress",
        type: "address",
      },
    ],
    name: "approveAsset",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "premium",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "initiator",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "params",
        type: "bytes",
      },
    ],
    name: "executeOperation",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
    ],
    name: "getRoleAdmin",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "grantRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "hasRole",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
    ],
    name: "isAdmin",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
    ],
    name: "isLiquidator",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "collateralAsset",
        type: "address",
      },
      {
        internalType: "address",
        name: "debtAsset",
        type: "address",
      },
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "debtToCover",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "enum IVault.SwapKind",
            name: "kind",
            type: "uint8",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "bytes32",
                    name: "poolId",
                    type: "bytes32",
                  },
                  {
                    internalType: "uint256",
                    name: "assetInIndex",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "assetOutIndex",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "amount",
                    type: "uint256",
                  },
                  {
                    internalType: "bytes",
                    name: "userData",
                    type: "bytes",
                  },
                ],
                internalType: "struct IVault.BatchSwapStep[]",
                name: "swap",
                type: "tuple[]",
              },
              {
                internalType: "int256[]",
                name: "limits",
                type: "int256[]",
              },
              {
                internalType: "contract IAsset[]",
                name: "assets",
                type: "address[]",
              },
              {
                internalType: "bool",
                name: "isBalancerPool",
                type: "bool",
              },
            ],
            internalType: "struct IRouter.Swap[]",
            name: "swaps",
            type: "tuple[]",
          },
          {
            internalType: "address payable",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
        ],
        internalType: "struct IRouter.SwapData",
        name: "swapData",
        type: "tuple",
      },
      {
        internalType: "bytes[]",
        name: "pythUpdateData",
        type: "bytes[]",
      },
    ],
    name: "liquidateAndSwap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "collateralAsset",
        type: "address",
      },
      {
        internalType: "address",
        name: "debtAsset",
        type: "address",
      },
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "debtToCover",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "badDebtAllowance",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "enum IVault.SwapKind",
            name: "kind",
            type: "uint8",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "bytes32",
                    name: "poolId",
                    type: "bytes32",
                  },
                  {
                    internalType: "uint256",
                    name: "assetInIndex",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "assetOutIndex",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "amount",
                    type: "uint256",
                  },
                  {
                    internalType: "bytes",
                    name: "userData",
                    type: "bytes",
                  },
                ],
                internalType: "struct IVault.BatchSwapStep[]",
                name: "swap",
                type: "tuple[]",
              },
              {
                internalType: "int256[]",
                name: "limits",
                type: "int256[]",
              },
              {
                internalType: "contract IAsset[]",
                name: "assets",
                type: "address[]",
              },
              {
                internalType: "bool",
                name: "isBalancerPool",
                type: "bool",
              },
            ],
            internalType: "struct IRouter.Swap[]",
            name: "swaps",
            type: "tuple[]",
          },
          {
            internalType: "address payable",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
        ],
        internalType: "struct IRouter.SwapData",
        name: "swapData",
        type: "tuple",
      },
      {
        internalType: "bytes[]",
        name: "pythUpdateData",
        type: "bytes[]",
      },
    ],
    name: "liquidateAndSwapWithFlashLoan",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "renounceRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "revokeRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "router",
    outputs: [
      {
        internalType: "contract IRouter",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "synthPool",
    outputs: [
      {
        internalType: "contract ISynthPool",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdrawNativeToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60c06040523480156200001157600080fd5b5060405162002b1d38038062002b1d8339810160408190526200003491620001db565b60016000556001600160a01b03831660808190526040805163026b1d5f60e01b8152905185929163026b1d5f9160048083019260209291908290030181865afa15801562000086573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000ac91906200024b565b6001600160a01b0390811660a052600280546001600160a01b0319908116898416179091556003805490911691871691909117905550620000ef60008362000126565b6200011b7feb33521169e672634fcae38dcc3bab0be8a080072000cfbdc0e041665d727c188262000126565b505050505062000270565b62000132828262000136565b5050565b60008281526001602090815260408083206001600160a01b038516845290915290205460ff16620001325760008281526001602081815260408084206001600160a01b0386168086529252808420805460ff19169093179092559051339285917f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d9190a45050565b80516001600160a01b0381168114620001d657600080fd5b919050565b600080600080600060a08688031215620001f457600080fd5b620001ff86620001be565b94506200020f60208701620001be565b93506200021f60408701620001be565b92506200022f60608701620001be565b91506200023f60808701620001be565b90509295509295909350565b6000602082840312156200025e57600080fd5b6200026982620001be565b9392505050565b60805160a051612879620002a46000396000818161035601528181610c070152610d3f015260006101d701526128796000f3fe6080604052600436106101625760003560e01c8063529a356f116100c0578063a75995e411610074578063d547741f11610059578063d547741f14610433578063e69d1ff714610453578063f887ea401461047357600080fd5b8063a75995e4146103f3578063a7ede8241461041357600080fd5b80638df6b327116100a55780638df6b3271461037857806391d1485414610398578063a217fddf146103de57600080fd5b8063529a356f146103245780637535d2461461034457600080fd5b8063248a9ca3116101175780632f2ff15d116100fc5780632f2ff15d146102b057806336568abe146102d057806346b88796146102f057600080fd5b8063248a9ca31461025157806324d7806c1461029057600080fd5b80630542975c116101485780630542975c146101c557806317e0f252146102115780631b11d0ff1461023157600080fd5b8062f714ce1461016e57806301ffc9a71461019057600080fd5b3661016957005b600080fd5b34801561017a57600080fd5b5061018e61018936600461191b565b610493565b005b34801561019c57600080fd5b506101b06101ab36600461194b565b610532565b60405190151581526020015b60405180910390f35b3480156101d157600080fd5b506101f97f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016101bc565b34801561021d57600080fd5b5061018e61022c366004611975565b61059b565b34801561023d57600080fd5b506101b061024c36600461198e565b6105e1565b34801561025d57600080fd5b5061028261026c366004611975565b6000908152600160208190526040909120015490565b6040519081526020016101bc565b34801561029c57600080fd5b506101b06102ab366004611a38565b610a2d565b3480156102bc57600080fd5b5061018e6102cb36600461191b565b610a6d565b3480156102dc57600080fd5b5061018e6102eb36600461191b565b610a99565b3480156102fc57600080fd5b506102827feb33521169e672634fcae38dcc3bab0be8a080072000cfbdc0e041665d727c1881565b34801561033057600080fd5b506101b061033f366004611a38565b610b25565b34801561035057600080fd5b506101f97f000000000000000000000000000000000000000000000000000000000000000081565b34801561038457600080fd5b5061018e610393366004611f63565b610b65565b3480156103a457600080fd5b506101b06103b336600461191b565b60009182526001602090815260408084206001600160a01b0393909316845291905290205460ff1690565b3480156103ea57600080fd5b50610282600081565b3480156103ff57600080fd5b5061018e61040e366004611a38565b610ccd565b34801561041f57600080fd5b5061018e61042e366004612018565b610d66565b34801561043f57600080fd5b5061018e61044e36600461191b565b611078565b34801561045f57600080fd5b506003546101f9906001600160a01b031681565b34801561047f57600080fd5b506002546101f9906001600160a01b031681565b600061049f813361109f565b6040516370a0823160e01b81523060048201526000906001600160a01b038416906370a0823190602401602060405180830381865afa1580156104e6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061050a91906120c4565b905080841115610518578093505b61052c6001600160a01b038416338661111f565b50505050565b60006001600160e01b031982167f7965db0b00000000000000000000000000000000000000000000000000000000148061059557507f01ffc9a7000000000000000000000000000000000000000000000000000000006001600160e01b03198316145b92915050565b60006105a7813361109f565b47808311156105b4578092505b604051339084156108fc029085906000818181858888f1935050505015801561052c573d6000803e3d6000fd5b60006105eb611867565b6105f7838501856120dd565b610160870181905261014087019190915260e086019190915260a08501919091526001600160a01b03918216610120850181905292821661010085018190526003546040516361f7051760e01b81529316936361f7051793610662938e938e92909190600401612295565b600060405180830381600087803b15801561067c57600080fd5b505af1158015610690573d6000803e3d6000fd5b50506003546101008401516040517fbe281f670000000000000000000000000000000000000000000000000000000081523060048201526001600160a01b0391821660248201529116925063be281f679150604401602060405180830381865afa158015610702573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061072691906120c4565b8082526003546101008301516101608401516040517fd5b6d6d50000000000000000000000000000000000000000000000000000000081526001600160a01b039093169363d5b6d6d59361078093926000916004016122cf565b600060405180830381600087803b15801561079a57600080fd5b505af11580156107ae573d6000803e3d6000fd5b50508251158015925090506107da5750876001600160a01b03168161010001516001600160a01b031614155b156109055780516101408201516020015180516000906107fc576107fc612309565b60200260200101516000015160008151811061081a5761081a612309565b60209081029190910101516060015261014081018051306040918201526002549151610160840151915163467388ab60e01b81526000936001600160a01b03169263467388ab926108709290919060040161250e565b6020604051808303816000875af115801561088f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108b391906120c4565b116109055760405162461bcd60e51b815260206004820152601260248201527f526f757465722073776170206661696c6564000000000000000000000000000060448201526064015b60405180910390fd5b6040516370a0823160e01b81523060048201526001600160a01b038916906370a0823190602401602060405180830381865afa158015610949573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061096d91906120c4565b60c0820181905260a082015161098291612552565b60808201526109918688612569565b606082015260e081015160808201516109aa9190612569565b6080820181905260c082015110156109c75760c081015160808201525b806060015181608001511015610a1f5760405162461bcd60e51b815260206004820152601c60248201527f4e6f742061626c6520746f20726570617920666c617368206c6f616e0000000060448201526064016108fc565b506001979650505050505050565b6001600160a01b03811660009081527fa6eef7e35abe7026729641147f7915573c7e97b47efa546f5f6e3230263bcb49602052604081205460ff16610595565b60008281526001602081905260409091200154610a8a813361109f565b610a9483836111b0565b505050565b6001600160a01b0381163314610b175760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201527f20726f6c657320666f722073656c66000000000000000000000000000000000060648201526084016108fc565b610b218282611237565b5050565b6001600160a01b03811660009081527f41e96e705ef65212608b5807af20a4c70b0e99668a5d9252dcb2e83ebd1c6300602052604081205460ff16610595565b610b6d6112ba565b7feb33521169e672634fcae38dcc3bab0be8a080072000cfbdc0e041665d727c18610b98813361109f565b6040516370a0823160e01b81523060048201526000906001600160a01b038a16906370a0823190602401602060405180830381865afa158015610bdf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c0391906120c4565b90507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166342b0b77c308b8a8e8d878d8d8d8d604051602001610c549796959493929190612632565b60405160208183030381529060405260006040518663ffffffff1660e01b8152600401610c8595949392919061268b565b600060405180830381600087803b158015610c9f57600080fd5b505af1158015610cb3573d6000803e3d6000fd5b505050505050610cc36001600055565b5050505050505050565b7feb33521169e672634fcae38dcc3bab0be8a080072000cfbdc0e041665d727c18610cf8813361109f565b600354610d14906001600160a01b038481169116600019611314565b600254610d30906001600160a01b038481169116600019611314565b610b216001600160a01b0383167f0000000000000000000000000000000000000000000000000000000000000000600019611314565b610d6e6112ba565b7feb33521169e672634fcae38dcc3bab0be8a080072000cfbdc0e041665d727c18610d99813361109f565b610dd26040518060c001604052806000815260200160008152602001600081526020016000815260200160008152602001600081525090565b6040516370a0823160e01b81523060048201526001600160a01b038a16906370a0823190602401602060405180830381865afa158015610e16573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e3a91906120c4565b60208201526003546040516361f7051760e01b81526001600160a01b03909116906361f7051790610e79908b908b908b908f908b908b906004016126d3565b600060405180830381600087803b158015610e9357600080fd5b505af1158015610ea7573d6000803e3d6000fd5b50506040516370a0823160e01b81523060048201526001600160a01b038c1692506370a082319150602401602060405180830381865afa158015610eef573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f1391906120c4565b604082018190526020820151610f2891612552565b80825215801590610f4b5750876001600160a01b0316896001600160a01b031614155b1561106357805160208601518051600090610f6857610f68612309565b602002602001015160000151600081518110610f8657610f86612309565b60209081029190910101516060015230604080870191909152600254905163467388ab60e01b81526000916001600160a01b03169063467388ab90610fd39089908990899060040161271a565b6020604051808303816000875af1158015610ff2573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061101691906120c4565b116110635760405162461bcd60e51b815260206004820152601260248201527f526f757465722073776170206661696c6564000000000000000000000000000060448201526064016108fc565b505061106f6001600055565b50505050505050565b60008281526001602081905260409091200154611095813361109f565b610a948383611237565b60008281526001602090815260408083206001600160a01b038516845290915290205460ff16610b21576110dd816001600160a01b031660146113f3565b6110e88360206113f3565b6040516020016110f9929190612740565b60408051601f198184030181529082905262461bcd60e51b82526108fc916004016127c1565b6040516001600160a01b038316602482015260448101829052610a949084907fa9059cbb00000000000000000000000000000000000000000000000000000000906064015b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff166001600160e01b0319909316929092179091526115db565b60008281526001602090815260408083206001600160a01b038516845290915290205460ff16610b215760008281526001602081815260408084206001600160a01b0386168086529252808420805460ff19169093179092559051339285917f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d9190a45050565b60008281526001602090815260408083206001600160a01b038516845290915290205460ff1615610b215760008281526001602090815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b6002600054141561130d5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016108fc565b6002600055565b6040517fdd62ed3e0000000000000000000000000000000000000000000000000000000081523060048201526001600160a01b0383811660248301526000919085169063dd62ed3e90604401602060405180830381865afa15801561137d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113a191906120c4565b905061052c847f095ea7b300000000000000000000000000000000000000000000000000000000856113d38686612569565b6040516001600160a01b0390921660248301526044820152606401611164565b606060006114028360026127d4565b61140d906002612569565b67ffffffffffffffff81111561142557611425611a55565b6040519080825280601f01601f19166020018201604052801561144f576020820181803683370190505b5090507f30000000000000000000000000000000000000000000000000000000000000008160008151811061148657611486612309565b60200101906001600160f81b031916908160001a9053507f7800000000000000000000000000000000000000000000000000000000000000816001815181106114d1576114d1612309565b60200101906001600160f81b031916908160001a90535060006114f58460026127d4565b611500906001612569565b90505b6001811115611585577f303132333435363738396162636465660000000000000000000000000000000085600f166010811061154157611541612309565b1a60f81b82828151811061155757611557612309565b60200101906001600160f81b031916908160001a90535060049490941c9361157e816127f3565b9050611503565b5083156115d45760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e7460448201526064016108fc565b9392505050565b6000611630826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166116c39092919063ffffffff16565b9050805160001480611651575080806020019051810190611651919061280a565b610a945760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f7420737563636565640000000000000000000000000000000000000000000060648201526084016108fc565b60606116d284846000856116da565b949350505050565b6060824710156117525760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c000000000000000000000000000000000000000000000000000060648201526084016108fc565b600080866001600160a01b0316858760405161176e9190612827565b60006040518083038185875af1925050503d80600081146117ab576040519150601f19603f3d011682016040523d82523d6000602084013e6117b0565b606091505b50915091506117c1878383876117cc565b979650505050505050565b60608315611838578251611831576001600160a01b0385163b6118315760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016108fc565b50816116d2565b6116d2838381511561184d5781518083602001fd5b8060405162461bcd60e51b81526004016108fc91906127c1565b604051806101800160405280600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160006001600160a01b0316815260200160006001600160a01b031681526020016118f66040805160808101909152806000815260606020820181905260006040830181905291015290565b8152602001606081525090565b6001600160a01b038116811461191857600080fd5b50565b6000806040838503121561192e57600080fd5b82359150602083013561194081611903565b809150509250929050565b60006020828403121561195d57600080fd5b81356001600160e01b0319811681146115d457600080fd5b60006020828403121561198757600080fd5b5035919050565b60008060008060008060a087890312156119a757600080fd5b86356119b281611903565b9550602087013594506040870135935060608701356119d081611903565b9250608087013567ffffffffffffffff808211156119ed57600080fd5b818901915089601f830112611a0157600080fd5b813581811115611a1057600080fd5b8a6020828501011115611a2257600080fd5b6020830194508093505050509295509295509295565b600060208284031215611a4a57600080fd5b81356115d481611903565b634e487b7160e01b600052604160045260246000fd5b6040516080810167ffffffffffffffff81118282101715611a8e57611a8e611a55565b60405290565b60405160a0810167ffffffffffffffff81118282101715611a8e57611a8e611a55565b604051601f8201601f1916810167ffffffffffffffff81118282101715611ae057611ae0611a55565b604052919050565b600067ffffffffffffffff821115611b0257611b02611a55565b5060051b60200190565b600082601f830112611b1d57600080fd5b813567ffffffffffffffff811115611b3757611b37611a55565b611b4a601f8201601f1916602001611ab7565b818152846020838601011115611b5f57600080fd5b816020850160208301376000918101602001919091529392505050565b600082601f830112611b8d57600080fd5b81356020611ba2611b9d83611ae8565b611ab7565b82815260059290921b84018101918181019086841115611bc157600080fd5b8286015b84811015611bdc5780358352918301918301611bc5565b509695505050505050565b600082601f830112611bf857600080fd5b81356020611c08611b9d83611ae8565b82815260059290921b84018101918181019086841115611c2757600080fd5b8286015b84811015611bdc578035611c3e81611903565b8352918301918301611c2b565b801515811461191857600080fd5b8035611c6481611c4b565b919050565b8035611c6481611903565b600060808284031215611c8657600080fd5b611c8e611a6b565b90506002823510611c9e57600080fd5b8135815267ffffffffffffffff60208301351115611cbb57600080fd5b6020820135820183601f820112611cd157600080fd5b611cde611b9d8235611ae8565b81358082526020808301929160051b840101861015611cfc57600080fd5b602083015b6020843560051b850101811015611eed5767ffffffffffffffff81351115611d2857600080fd5b803584016080818903601f19011215611d4057600080fd5b611d48611a6b565b67ffffffffffffffff60208301351115611d6157600080fd5b6020820135820189603f820112611d7757600080fd5b611d87611b9d6020830135611ae8565b602082810135808352908201919060051b83016040018c1015611da957600080fd5b604083015b6040602085013560051b850101811015611e665767ffffffffffffffff81351115611dd857600080fd5b60a0813585018e03603f19011215611def57600080fd5b611df7611a94565b813585016040818101358352606080830135602085015260808301359184019190915260a08201359083015267ffffffffffffffff60c0909101351115611e3d57600080fd5b611e538e8335870160c081013501604001611b0c565b6080820152835260209283019201611dae565b508352505067ffffffffffffffff60408301351115611e8457600080fd5b611e978960206040850135850101611b7c565b602082015267ffffffffffffffff60608301351115611eb557600080fd5b611ec88960206060850135850101611be7565b6040820152611ed960808301611c59565b606082015284525060209283019201611d01565b50602084015250611f02905060408301611c69565b60408201526060820135606082015292915050565b60008083601f840112611f2957600080fd5b50813567ffffffffffffffff811115611f4157600080fd5b6020830191508360208260051b8501011115611f5c57600080fd5b9250929050565b60008060008060008060008060e0898b031215611f7f57600080fd5b8835611f8a81611903565b97506020890135611f9a81611903565b96506040890135611faa81611903565b9550606089013594506080890135935060a089013567ffffffffffffffff80821115611fd557600080fd5b611fe18c838d01611c74565b945060c08b0135915080821115611ff757600080fd5b506120048b828c01611f17565b999c989b5096995094979396929594505050565b600080600080600080600060c0888a03121561203357600080fd5b873561203e81611903565b9650602088013561204e81611903565b9550604088013561205e81611903565b945060608801359350608088013567ffffffffffffffff8082111561208257600080fd5b61208e8b838c01611c74565b945060a08a01359150808211156120a457600080fd5b506120b18a828b01611f17565b989b979a50959850939692959293505050565b6000602082840312156120d657600080fd5b5051919050565b60008060008060008060c087890312156120f657600080fd5b6121008735611903565b8635955060208088013561211381611903565b95506040880135945060608801359350608088013567ffffffffffffffff8082111561213e57600080fd5b61214a8b838c01611c74565b945060a08a013591508082111561216057600080fd5b818a0191508a601f83011261217457600080fd5b8135612182611b9d82611ae8565b81815260059190911b8301840190848101908d8311156121a157600080fd5b8585015b838110156121d75784813511156121bb57600080fd5b6121ca8f888335890101611b0c565b83529186019186016121a5565b508096505050505050509295509295509295565b60005b838110156122065781810151838201526020016121ee565b8381111561052c5750506000910152565b6000815180845261222f8160208601602086016121eb565b601f01601f19169290920160200192915050565b6000815180845260208085019450848260051b860182860160005b85811015612288578383038952612276838351612217565b9885019892509084019060010161225e565b5090979650505050505050565b60006001600160a01b038088168352808716602084015285604084015280851660608401525060a060808301526117c160a0830184612243565b6001600160a01b038516815283602082015282151560408201526080606082015260006122ff6080830184612243565b9695505050505050565b634e487b7160e01b600052603260045260246000fd5b600081518084526020808501945080840160005b8381101561234f57815187529582019590820190600101612333565b509495945050505050565b600081518084526020808501945080840160005b8381101561234f5781516001600160a01b03168752958201959082019060010161236e565b6000608083018251600281106123b957634e487b7160e01b600052602160045260246000fd5b845260208381015160808287015280519283905260a0929082019083870190600581901b8801850160005b828110156124d857609f198a8303810185528551805160808086528151908601819052600581901b86018b01918a01908b87019060005b8181101561247857868986030183528351805186528d8101518e8701526040810151604087015260608101516060870152608081015190508e60808701526124658f870182612217565b955050928c0192918c019160010161241b565b5050505088820151925084810389860152612493818461231f565b925050604081015184830360408601526124ad838261235a565b925050606081015190506124c5606085018215159052565b50948601949386019391506001016123e4565b50604088015195506124f560408a01876001600160a01b03169052565b606088015160608a015280965050505050505092915050565b6040815260006125216040830185612393565b82810360208401526125338185612243565b95945050505050565b634e487b7160e01b600052601160045260246000fd5b6000828210156125645761256461253c565b500390565b6000821982111561257c5761257c61253c565b500190565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b60008383855260208086019550808560051b8301018460005b8781101561228857848303601f19018952813536889003601e190181126125e957600080fd5b8701803567ffffffffffffffff81111561260257600080fd5b80360389131561261157600080fd5b61261e8582888501612581565b9a86019a94505050908301906001016125c3565b60006001600160a01b03808a16835280891660208401525086604083015285606083015260c0608083015261266a60c0830186612393565b82810360a084015261267d8185876125aa565b9a9950505050505050505050565b60006001600160a01b03808816835280871660208401525084604083015260a060608301526126bd60a0830185612217565b905061ffff831660808301529695505050505050565b60006001600160a01b038089168352808816602084015286604084015280861660608401525060a0608083015261270e60a0830184866125aa565b98975050505050505050565b60408152600061272d6040830186612393565b82810360208401526122ff8185876125aa565b7f416363657373436f6e74726f6c3a206163636f756e74200000000000000000008152600083516127788160178501602088016121eb565b7f206973206d697373696e6720726f6c652000000000000000000000000000000060179184019182015283516127b58160288401602088016121eb565b01602801949350505050565b6020815260006115d46020830184612217565b60008160001904831182151516156127ee576127ee61253c565b500290565b6000816128025761280261253c565b506000190190565b60006020828403121561281c57600080fd5b81516115d481611c4b565b600082516128398184602087016121eb565b919091019291505056fea264697066735822122062591e9624ce9d2ad65b1976cbb46d61d5601ca7b831535d35bf7b8899c7e3d764736f6c634300080a0033";

type SynthLiquidationConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SynthLiquidationConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SynthLiquidation__factory extends ContractFactory {
  constructor(...args: SynthLiquidationConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _router: PromiseOrValue<string>,
    _synthPool: PromiseOrValue<string>,
    _addressProvider: PromiseOrValue<string>,
    _admin: PromiseOrValue<string>,
    _liquidator: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<SynthLiquidation> {
    return super.deploy(
      _router,
      _synthPool,
      _addressProvider,
      _admin,
      _liquidator,
      overrides || {}
    ) as Promise<SynthLiquidation>;
  }
  override getDeployTransaction(
    _router: PromiseOrValue<string>,
    _synthPool: PromiseOrValue<string>,
    _addressProvider: PromiseOrValue<string>,
    _admin: PromiseOrValue<string>,
    _liquidator: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _router,
      _synthPool,
      _addressProvider,
      _admin,
      _liquidator,
      overrides || {}
    );
  }
  override attach(address: string): SynthLiquidation {
    return super.attach(address) as SynthLiquidation;
  }
  override connect(signer: Signer): SynthLiquidation__factory {
    return super.connect(signer) as SynthLiquidation__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SynthLiquidationInterface {
    return new utils.Interface(_abi) as SynthLiquidationInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SynthLiquidation {
    return new Contract(address, _abi, signerOrProvider) as SynthLiquidation;
  }
}
