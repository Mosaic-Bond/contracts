/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  IRouter,
  IRouterInterface,
} from "../../../../../../../contracts/lend/aave-core-v3/contracts/liquidation/Liquidation.sol/IRouter";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "enum IVault.SwapKind",
            name: "kind",
            type: "uint8",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "bytes32",
                    name: "poolId",
                    type: "bytes32",
                  },
                  {
                    internalType: "uint256",
                    name: "assetInIndex",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "assetOutIndex",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "amount",
                    type: "uint256",
                  },
                  {
                    internalType: "bytes",
                    name: "userData",
                    type: "bytes",
                  },
                ],
                internalType: "struct IVault.BatchSwapStep[]",
                name: "swap",
                type: "tuple[]",
              },
              {
                internalType: "int256[]",
                name: "limits",
                type: "int256[]",
              },
              {
                internalType: "contract IAsset[]",
                name: "assets",
                type: "address[]",
              },
              {
                internalType: "bool",
                name: "isBalancerPool",
                type: "bool",
              },
            ],
            internalType: "struct IRouter.Swap[]",
            name: "swaps",
            type: "tuple[]",
          },
          {
            internalType: "address payable",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
        ],
        internalType: "struct IRouter.SwapData",
        name: "swapData",
        type: "tuple",
      },
      {
        internalType: "bytes[]",
        name: "pythUpdateData",
        type: "bytes[]",
      },
    ],
    name: "swap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
] as const;

export class IRouter__factory {
  static readonly abi = _abi;
  static createInterface(): IRouterInterface {
    return new utils.Interface(_abi) as IRouterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IRouter {
    return new Contract(address, _abi, signerOrProvider) as IRouter;
  }
}
