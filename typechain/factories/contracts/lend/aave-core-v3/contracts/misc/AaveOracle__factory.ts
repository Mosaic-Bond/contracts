/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../../common";
import type {
  AaveOracle,
  AaveOracleInterface,
} from "../../../../../../contracts/lend/aave-core-v3/contracts/misc/AaveOracle";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IPoolAddressesProvider",
        name: "provider",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "assets",
        type: "address[]",
      },
      {
        internalType: "address[]",
        name: "sources",
        type: "address[]",
      },
      {
        internalType: "address",
        name: "fallbackOracle",
        type: "address",
      },
      {
        internalType: "address",
        name: "baseCurrency",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "baseCurrencyUnit",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "source",
        type: "address",
      },
    ],
    name: "AssetSourceUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "baseCurrency",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "baseCurrencyUnit",
        type: "uint256",
      },
    ],
    name: "BaseCurrencySet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "fallbackOracle",
        type: "address",
      },
    ],
    name: "FallbackOracleUpdated",
    type: "event",
  },
  {
    inputs: [],
    name: "ADDRESSES_PROVIDER",
    outputs: [
      {
        internalType: "contract IPoolAddressesProvider",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "BASE_CURRENCY",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "BASE_CURRENCY_UNIT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
    ],
    name: "getAssetPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "assets",
        type: "address[]",
      },
    ],
    name: "getAssetsPrices",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getFallbackOracle",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
    ],
    name: "getSourceOfAsset",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "assets",
        type: "address[]",
      },
      {
        internalType: "address[]",
        name: "sources",
        type: "address[]",
      },
    ],
    name: "setAssetSources",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "fallbackOracle",
        type: "address",
      },
    ],
    name: "setFallbackOracle",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60e06040523480156200001157600080fd5b50604051620010473803806200104783398101604081905262000034916200034e565b6001600160a01b0386166080526200004c83620000ab565b620000588585620000f5565b6001600160a01b03821660a081905260c08290526040518281527fe27c4c1372396a3d15a9922f74f9dfc7c72b1ad6d63868470787249c356454c19060200160405180910390a25050505050506200049a565b600180546001600160a01b0319166001600160a01b0383169081179091556040517fce7a780d33665b1ea097af5f155e3821b809ecbaa839d3b33aa83ba28168cefb90600090a250565b8051825114604051806040016040528060028152602001611b9b60f11b815250906200013f5760405162461bcd60e51b815260040162000136919062000402565b60405180910390fd5b5060005b82518110156200025b578181815181106200016257620001626200045a565b60200260200101516000808584815181106200018257620001826200045a565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060006101000a8154816001600160a01b0302191690836001600160a01b03160217905550818181518110620001e357620001e36200045a565b60200260200101516001600160a01b03168382815181106200020957620002096200045a565b60200260200101516001600160a01b03167f22c5b7b2d8561d39f7f210b6b326a1aa69f15311163082308ac4877db6339dc160405160405180910390a380620002528162000470565b91505062000143565b505050565b6001600160a01b03811681146200027657600080fd5b50565b634e487b7160e01b600052604160045260246000fd5b80516200029c8162000260565b919050565b600082601f830112620002b357600080fd5b815160206001600160401b0380831115620002d257620002d262000279565b8260051b604051601f19603f83011681018181108482111715620002fa57620002fa62000279565b6040529384528581018301938381019250878511156200031957600080fd5b83870191505b84821015620003435762000333826200028f565b835291830191908301906200031f565b979650505050505050565b60008060008060008060c087890312156200036857600080fd5b8651620003758162000260565b60208801519096506001600160401b03808211156200039357600080fd5b620003a18a838b01620002a1565b96506040890151915080821115620003b857600080fd5b50620003c789828a01620002a1565b9450506060870151620003da8162000260565b6080880151909350620003ed8162000260565b8092505060a087015190509295509295509295565b600060208083528351808285015260005b81811015620004315785810183015185820160400152820162000413565b8181111562000444576000604083870101525b50601f01601f1916929092016040019392505050565b634e487b7160e01b600052603260045260246000fd5b60006000198214156200049357634e487b7160e01b600052601160045260246000fd5b5060010190565b60805160a05160c051610b69620004de6000396000818161011701526103710152600081816101be015261034601526000818160ad01526105090152610b696000f3fe608060405234801561001057600080fd5b50600436106100a35760003560e01c806392bf2be011610076578063abfd53101161005b578063abfd531014610193578063b3596f07146101a6578063e19f4700146101b957600080fd5b806392bf2be0146101475780639d23d9f21461017357600080fd5b80630542975c146100a8578063170aee73146100ec5780636210308c146101015780638c89b64f14610112575b600080fd5b6100cf7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b6100ff6100fa3660046108d6565b6101e0565b005b6001546001600160a01b03166100cf565b6101397f000000000000000000000000000000000000000000000000000000000000000081565b6040519081526020016100e3565b6100cf6101553660046108d6565b6001600160a01b039081166000908152602081905260409020541690565b61018661018136600461093f565b6101f4565b6040516100e39190610981565b6100ff6101a13660046109c5565b6102a9565b6101396101b43660046108d6565b610324565b6100cf7f000000000000000000000000000000000000000000000000000000000000000081565b6101e8610505565b6101f1816106f5565b50565b606060008267ffffffffffffffff81111561021157610211610a31565b60405190808252806020026020018201604052801561023a578160200160208202803683370190505b50905060005b838110156102a15761027285858381811061025d5761025d610a47565b90506020020160208101906101b491906108d6565b82828151811061028457610284610a47565b60209081029190910101528061029981610a5d565b915050610240565b509392505050565b6102b1610505565b61031e8484808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152505060408051602080880282810182019093528782529093508792508691829185019084908082843760009201919091525061075792505050565b50505050565b6001600160a01b038082166000818152602081905260408120549092908116917f0000000000000000000000000000000000000000000000000000000000000000909116141561039657507f000000000000000000000000000000000000000000000000000000000000000092915050565b6001600160a01b0381166104195760015460405163b3596f0760e01b81526001600160a01b0385811660048301529091169063b3596f0790602401602060405180830381865afa1580156103ee573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104129190610a86565b9392505050565b6000816001600160a01b03166350d25bcd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610459573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061047d9190610a86565b9050600081131561048f579392505050565b60015460405163b3596f0760e01b81526001600160a01b0386811660048301529091169063b3596f0790602401602060405180830381865afa1580156104d9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104fd9190610a86565b949350505050565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663707cd7166040518163ffffffff1660e01b8152600401602060405180830381865afa158015610565573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105899190610a9f565b6040517f13ee32e00000000000000000000000000000000000000000000000000000000081523360048201529091506001600160a01b038216906313ee32e090602401602060405180830381865afa1580156105e9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061060d9190610abc565b8061069457506040517f7be53ca10000000000000000000000000000000000000000000000000000000081523360048201526001600160a01b03821690637be53ca190602401602060405180830381865afa158015610670573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106949190610abc565b6040518060400160405280600181526020017f3500000000000000000000000000000000000000000000000000000000000000815250906106f15760405162461bcd60e51b81526004016106e89190610ade565b60405180910390fd5b5050565b600180547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0383169081179091556040517fce7a780d33665b1ea097af5f155e3821b809ecbaa839d3b33aa83ba28168cefb90600090a250565b80518251146040518060400160405280600281526020017f3736000000000000000000000000000000000000000000000000000000000000815250906107b05760405162461bcd60e51b81526004016106e89190610ade565b5060005b82518110156108bc578181815181106107cf576107cf610a47565b60200260200101516000808584815181106107ec576107ec610a47565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060006101000a8154816001600160a01b0302191690836001600160a01b0316021790555081818151811061084a5761084a610a47565b60200260200101516001600160a01b031683828151811061086d5761086d610a47565b60200260200101516001600160a01b03167f22c5b7b2d8561d39f7f210b6b326a1aa69f15311163082308ac4877db6339dc160405160405180910390a3806108b481610a5d565b9150506107b4565b505050565b6001600160a01b03811681146101f157600080fd5b6000602082840312156108e857600080fd5b8135610412816108c1565b60008083601f84011261090557600080fd5b50813567ffffffffffffffff81111561091d57600080fd5b6020830191508360208260051b850101111561093857600080fd5b9250929050565b6000806020838503121561095257600080fd5b823567ffffffffffffffff81111561096957600080fd5b610975858286016108f3565b90969095509350505050565b6020808252825182820181905260009190848201906040850190845b818110156109b95783518352928401929184019160010161099d565b50909695505050505050565b600080600080604085870312156109db57600080fd5b843567ffffffffffffffff808211156109f357600080fd5b6109ff888389016108f3565b90965094506020870135915080821115610a1857600080fd5b50610a25878288016108f3565b95989497509550505050565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b6000600019821415610a7f57634e487b7160e01b600052601160045260246000fd5b5060010190565b600060208284031215610a9857600080fd5b5051919050565b600060208284031215610ab157600080fd5b8151610412816108c1565b600060208284031215610ace57600080fd5b8151801515811461041257600080fd5b600060208083528351808285015260005b81811015610b0b57858101830151858201604001528201610aef565b81811115610b1d576000604083870101525b50601f01601f191692909201604001939250505056fea26469706673582212204f1b7e69d84ffe86d7b4676a20398a6f792a19027a7a0de73c7a82f2a87546e364736f6c634300080a0033";

type AaveOracleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AaveOracleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AaveOracle__factory extends ContractFactory {
  constructor(...args: AaveOracleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    provider: PromiseOrValue<string>,
    assets: PromiseOrValue<string>[],
    sources: PromiseOrValue<string>[],
    fallbackOracle: PromiseOrValue<string>,
    baseCurrency: PromiseOrValue<string>,
    baseCurrencyUnit: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<AaveOracle> {
    return super.deploy(
      provider,
      assets,
      sources,
      fallbackOracle,
      baseCurrency,
      baseCurrencyUnit,
      overrides || {}
    ) as Promise<AaveOracle>;
  }
  override getDeployTransaction(
    provider: PromiseOrValue<string>,
    assets: PromiseOrValue<string>[],
    sources: PromiseOrValue<string>[],
    fallbackOracle: PromiseOrValue<string>,
    baseCurrency: PromiseOrValue<string>,
    baseCurrencyUnit: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      provider,
      assets,
      sources,
      fallbackOracle,
      baseCurrency,
      baseCurrencyUnit,
      overrides || {}
    );
  }
  override attach(address: string): AaveOracle {
    return super.attach(address) as AaveOracle;
  }
  override connect(signer: Signer): AaveOracle__factory {
    return super.connect(signer) as AaveOracle__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AaveOracleInterface {
    return new utils.Interface(_abi) as AaveOracleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AaveOracle {
    return new Contract(address, _abi, signerOrProvider) as AaveOracle;
  }
}
