/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../../../common";
import type {
  PoolStorage,
  PoolStorageInterface,
} from "../../../../../../../contracts/lend/aave-core-v3/contracts/protocol/pool/PoolStorage";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "borrowFees",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "supplyFees",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5060f48061001f6000396000f3fe6080604052348015600f57600080fd5b506004361060325760003560e01c8063078c8b2b1460375780638f864900146066575b600080fd5b605460423660046083565b60086020526000908152604090205481565b60405190815260200160405180910390f35b605460713660046083565b60096020526000908152604090205481565b600060208284031215609457600080fd5b813573ffffffffffffffffffffffffffffffffffffffff8116811460b757600080fd5b939250505056fea2646970667358221220ddfcc608bd1ad0150267aefee545746f2894fb5aadd3c2edcc318483c8c6ab0964736f6c634300080a0033";

type PoolStorageConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PoolStorageConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PoolStorage__factory extends ContractFactory {
  constructor(...args: PoolStorageConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<PoolStorage> {
    return super.deploy(overrides || {}) as Promise<PoolStorage>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): PoolStorage {
    return super.attach(address) as PoolStorage;
  }
  override connect(signer: Signer): PoolStorage__factory {
    return super.connect(signer) as PoolStorage__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PoolStorageInterface {
    return new utils.Interface(_abi) as PoolStorageInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PoolStorage {
    return new Contract(address, _abi, signerOrProvider) as PoolStorage;
  }
}
