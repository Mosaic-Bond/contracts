/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../../../../common";
import type {
  BaseImmutableAdminUpgradeabilityProxy,
  BaseImmutableAdminUpgradeabilityProxyInterface,
} from "../../../../../../../../contracts/lend/aave-core-v3/contracts/protocol/libraries/aave-upgradeability/BaseImmutableAdminUpgradeabilityProxy";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "admin",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [],
    name: "admin",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "implementation",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
    ],
    name: "upgradeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a060405234801561001057600080fd5b5060405161064c38038061064c83398101604081905261002f91610040565b6001600160a01b0316608052610070565b60006020828403121561005257600080fd5b81516001600160a01b038116811461006957600080fd5b9392505050565b60805161059e6100ae600039600081816101070152818161014c01528181610205015281816102690152818161029201526102bf015261059e6000f3fe60806040526004361061003f5760003560e01c80633659cfe6146100495780634f1ef286146100695780635c60da1b1461007c578063f851a440146100ad575b6100476100c2565b005b34801561005557600080fd5b506100476100643660046104b3565b6100fc565b6100476100773660046104d5565b610141565b34801561008857600080fd5b506100916101f8565b6040516001600160a01b03909116815260200160405180910390f35b3480156100b957600080fd5b5061009161025c565b6100ca6102b4565b6100fa6100f57f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5490565b610358565b565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161415610139576101368161037c565b50565b6101366100c2565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614156101eb5761017b8361037c565b6000836001600160a01b03168383604051610197929190610558565b600060405180830381855af49150503d80600081146101d2576040519150601f19603f3d011682016040523d82523d6000602084013e6101d7565b606091505b50509050806101e557600080fd5b50505050565b6101f36100c2565b505050565b6000336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016141561025157507f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5490565b6102596100c2565b90565b6000336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016141561025157507f000000000000000000000000000000000000000000000000000000000000000090565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614156100fa5760405162461bcd60e51b815260206004820152603260248201527f43616e6e6f742063616c6c2066616c6c6261636b2066756e6374696f6e20667260448201527f6f6d207468652070726f78792061646d696e000000000000000000000000000060648201526084015b60405180910390fd5b3660008037600080366000845af43d6000803e808015610377573d6000f35b3d6000fd5b610385816103bc565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b6103c58161045b565b6104375760405162461bcd60e51b815260206004820152603b60248201527f43616e6e6f742073657420612070726f787920696d706c656d656e746174696f60448201527f6e20746f2061206e6f6e2d636f6e747261637420616464726573730000000000606482015260840161034f565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc55565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47081811480159061048f57508115155b949350505050565b80356001600160a01b03811681146104ae57600080fd5b919050565b6000602082840312156104c557600080fd5b6104ce82610497565b9392505050565b6000806000604084860312156104ea57600080fd5b6104f384610497565b9250602084013567ffffffffffffffff8082111561051057600080fd5b818601915086601f83011261052457600080fd5b81358181111561053357600080fd5b87602082850101111561054557600080fd5b6020830194508093505050509250925092565b818382376000910190815291905056fea2646970667358221220aaf9ac4ab5aa5f740a7fdfede3d6ce1e5834e85a75e4cc75fb473e8d365f358964736f6c634300080a0033";

type BaseImmutableAdminUpgradeabilityProxyConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BaseImmutableAdminUpgradeabilityProxyConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BaseImmutableAdminUpgradeabilityProxy__factory extends ContractFactory {
  constructor(...args: BaseImmutableAdminUpgradeabilityProxyConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    admin: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<BaseImmutableAdminUpgradeabilityProxy> {
    return super.deploy(
      admin,
      overrides || {}
    ) as Promise<BaseImmutableAdminUpgradeabilityProxy>;
  }
  override getDeployTransaction(
    admin: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(admin, overrides || {});
  }
  override attach(address: string): BaseImmutableAdminUpgradeabilityProxy {
    return super.attach(address) as BaseImmutableAdminUpgradeabilityProxy;
  }
  override connect(
    signer: Signer
  ): BaseImmutableAdminUpgradeabilityProxy__factory {
    return super.connect(
      signer
    ) as BaseImmutableAdminUpgradeabilityProxy__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BaseImmutableAdminUpgradeabilityProxyInterface {
    return new utils.Interface(
      _abi
    ) as BaseImmutableAdminUpgradeabilityProxyInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BaseImmutableAdminUpgradeabilityProxy {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as BaseImmutableAdminUpgradeabilityProxy;
  }
}
